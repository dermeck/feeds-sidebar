diff --git a/dist/webext-redux.js b/dist/webext-redux.js
index de02854d62201ed278cc1c878743b9d3a4f4ee21..764eaccd8d3ea84f01672d4126b297a3bff24aa2 100644
--- a/dist/webext-redux.js
+++ b/dist/webext-redux.js
@@ -2,14 +2,34 @@
 typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
 typeof define === 'function' && define.amd ? define(['exports'], factory) :
 (global = global || self, factory(global.WebextRedux = {}));
-}(this, function (exports) { 'use strict';
-
+}(this, (function (exports) { 'use strict';
+
+function ownKeys(object, enumerableOnly) {
+  var keys = Object.keys(object);
+  if (Object.getOwnPropertySymbols) {
+    var symbols = Object.getOwnPropertySymbols(object);
+    enumerableOnly && (symbols = symbols.filter(function (sym) {
+      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
+    })), keys.push.apply(keys, symbols);
+  }
+  return keys;
+}
+function _objectSpread2(target) {
+  for (var i = 1; i < arguments.length; i++) {
+    var source = null != arguments[i] ? arguments[i] : {};
+    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
+      _defineProperty(target, key, source[key]);
+    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
+      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
+    });
+  }
+  return target;
+}
 function _classCallCheck(instance, Constructor) {
   if (!(instance instanceof Constructor)) {
     throw new TypeError("Cannot call a class as a function");
   }
 }
-
 function _defineProperties(target, props) {
   for (var i = 0; i < props.length; i++) {
     var descriptor = props[i];
@@ -19,13 +39,14 @@ function _defineProperties(target, props) {
     Object.defineProperty(target, descriptor.key, descriptor);
   }
 }
-
 function _createClass(Constructor, protoProps, staticProps) {
   if (protoProps) _defineProperties(Constructor.prototype, protoProps);
   if (staticProps) _defineProperties(Constructor, staticProps);
+  Object.defineProperty(Constructor, "prototype", {
+    writable: false
+  });
   return Constructor;
 }
-
 function _defineProperty(obj, key, value) {
   if (key in obj) {
     Object.defineProperty(obj, key, {
@@ -37,47 +58,83 @@ function _defineProperty(obj, key, value) {
   } else {
     obj[key] = value;
   }
-
   return obj;
 }
-
-function _objectSpread(target) {
-  for (var i = 1; i < arguments.length; i++) {
-    var source = arguments[i] != null ? arguments[i] : {};
-    var ownKeys = Object.keys(source);
-
-    if (typeof Object.getOwnPropertySymbols === 'function') {
-      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
-        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
-      }));
-    }
-
-    ownKeys.forEach(function (key) {
-      _defineProperty(target, key, source[key]);
-    });
-  }
-
-  return target;
-}
-
 function _toConsumableArray(arr) {
-  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
+  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
 }
-
 function _arrayWithoutHoles(arr) {
-  if (Array.isArray(arr)) {
-    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];
-
-    return arr2;
-  }
+  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
 }
-
 function _iterableToArray(iter) {
-  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
+  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
+}
+function _unsupportedIterableToArray(o, minLen) {
+  if (!o) return;
+  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
+  var n = Object.prototype.toString.call(o).slice(8, -1);
+  if (n === "Object" && o.constructor) n = o.constructor.name;
+  if (n === "Map" || n === "Set") return Array.from(o);
+  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
+}
+function _arrayLikeToArray(arr, len) {
+  if (len == null || len > arr.length) len = arr.length;
+  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
+  return arr2;
 }
-
 function _nonIterableSpread() {
-  throw new TypeError("Invalid attempt to spread non-iterable instance");
+  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
+}
+function _createForOfIteratorHelper(o, allowArrayLike) {
+  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
+  if (!it) {
+    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
+      if (it) o = it;
+      var i = 0;
+      var F = function () {};
+      return {
+        s: F,
+        n: function () {
+          if (i >= o.length) return {
+            done: true
+          };
+          return {
+            done: false,
+            value: o[i++]
+          };
+        },
+        e: function (e) {
+          throw e;
+        },
+        f: F
+      };
+    }
+    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
+  }
+  var normalCompletion = true,
+    didErr = false,
+    err;
+  return {
+    s: function () {
+      it = it.call(o);
+    },
+    n: function () {
+      var step = it.next();
+      normalCompletion = step.done;
+      return step;
+    },
+    e: function (e) {
+      didErr = true;
+      err = e;
+    },
+    f: function () {
+      try {
+        if (!normalCompletion && it.return != null) it.return();
+      } finally {
+        if (didErr) throw err;
+      }
+    }
+  };
 }
 
 /**
@@ -709,32 +766,32 @@ var lodash_assignin = assignIn;
 
 // Message type used for dispatch events
 // from the Proxy Stores to background
-var DISPATCH_TYPE = 'chromex.dispatch'; // Message type for state update events from
+var DISPATCH_TYPE = 'chromex.dispatch';
+
+// Message type for state update events from
 // background to Proxy Stores
+var STATE_TYPE = 'chromex.state';
 
-var STATE_TYPE = 'chromex.state'; // Message type for state patch events from
+// Message type for state patch events from
 // background to Proxy Stores
+var PATCH_STATE_TYPE = 'chromex.patch_state';
 
-var PATCH_STATE_TYPE = 'chromex.patch_state'; // The default name for the port communication via
+// The default name for the port communication via
 // react-chrome-redux
-
 var DEFAULT_PORT_NAME = "chromex.port_name";
 
 var noop = function noop(payload) {
   return payload;
 };
-
 var transformPayload = function transformPayload(message) {
   var transformer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
-  return _objectSpread({}, message, message.payload ? {
+  return _objectSpread2(_objectSpread2({}, message), message.payload ? {
     payload: transformer(message.payload)
   } : {});
 };
-
 var deserializeListener = function deserializeListener(listener) {
   var deserializer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
   var shouldDeserialize = arguments.length > 2 ? arguments[2] : undefined;
-
   // If a shouldDeserialize function is passed, return a function that uses it
   // to check if any given message payload should be deserialized
   if (shouldDeserialize) {
@@ -742,24 +799,21 @@ var deserializeListener = function deserializeListener(listener) {
       for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
         args[_key - 1] = arguments[_key];
       }
-
       if (shouldDeserialize.apply(void 0, [message].concat(args))) {
         return listener.apply(void 0, [transformPayload(message, deserializer)].concat(args));
       }
-
       return listener.apply(void 0, [message].concat(args));
     };
-  } // Otherwise, return a function that tries to deserialize on every message
-
-
+  }
+  // Otherwise, return a function that tries to deserialize on every message
   return function (message) {
     for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
       args[_key2 - 1] = arguments[_key2];
     }
-
     return listener.apply(void 0, [transformPayload(message, deserializer)].concat(args));
   };
 };
+
 /**
  * A function returned from withDeserializer that, when called, wraps addListenerFn with the
  * deserializer passed to withDeserializer.
@@ -796,8 +850,6 @@ var deserializeListener = function deserializeListener(listener) {
  *   chrome.runtime.sendMessage("{'payload':{'prop':4}}");
  *   //Payload: "{'prop':4}";
  */
-
-
 var withDeserializer = function withDeserializer() {
   var deserializer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;
   return function (addListenerFn) {
@@ -806,6 +858,7 @@ var withDeserializer = function withDeserializer() {
     };
   };
 };
+
 /**
  * Given a serializer, returns a function that takes a message sending
  * function as its sole argument and returns a wrapped message sender that
@@ -820,7 +873,6 @@ var withDeserializer = function withDeserializer() {
  *   serializedChromeSender({ payload: { prop: 4 }})
  *   //Payload: "{'prop':4}"
  */
-
 var withSerializer = function withSerializer() {
   var serializer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;
   return function (sendMessageFn) {
@@ -829,11 +881,9 @@ var withSerializer = function withSerializer() {
       for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
         args[_key3] = arguments[_key3];
       }
-
       if (args.length <= messageArgIndex) {
         throw new Error("Message in request could not be serialized. " + "Expected message in position ".concat(messageArgIndex, " but only received ").concat(args.length, " args."));
       }
-
       args[messageArgIndex] = transformPayload(args[messageArgIndex], serializer);
       return sendMessageFn.apply(void 0, args);
     };
@@ -841,30 +891,28 @@ var withSerializer = function withSerializer() {
 };
 
 // The `change` value for updated or inserted fields resulting from shallow diff
-var DIFF_STATUS_UPDATED = 'updated'; // The `change` value for removed fields resulting from shallow diff
+var DIFF_STATUS_UPDATED = 'updated';
 
+// The `change` value for removed fields resulting from shallow diff
 var DIFF_STATUS_REMOVED = 'removed';
 
 function shallowDiff (obj, difference) {
   var newObj = Object.assign({}, obj);
   difference.forEach(function (_ref) {
     var change = _ref.change,
-        key = _ref.key,
-        value = _ref.value;
-
+      key = _ref.key,
+      value = _ref.value;
     switch (change) {
       case DIFF_STATUS_UPDATED:
         newObj[key] = value;
         break;
-
       case DIFF_STATUS_REMOVED:
         Reflect.deleteProperty(newObj, key);
         break;
-
-      default: // do nothing
-
+      // do nothing
     }
   });
+
   return newObj;
 }
 
@@ -875,7 +923,6 @@ function shallowDiff (obj, difference) {
  */
 function getBrowserAPI() {
   var api;
-
   try {
     // eslint-disable-next-line no-undef
     api = self.chrome || self.browser || browser;
@@ -883,11 +930,9 @@ function getBrowserAPI() {
     // eslint-disable-next-line no-undef
     api = browser;
   }
-
   if (!api) {
     throw new Error("Browser API is not present");
   }
-
   return api;
 }
 
@@ -900,49 +945,39 @@ var defaultOpts = {
   deserializer: noop,
   patchStrategy: shallowDiff
 };
-
-var Store =
-/*#__PURE__*/
-function () {
+var Store = /*#__PURE__*/function () {
   /**
    * Creates a new Proxy store
    * @param  {object} options An object of form {portName, state, extensionId, serializer, deserializer, diffStrategy}, where `portName` is a required string and defines the name of the port for state transition changes, `state` is the initial state of this store (default `{}`) `extensionId` is the extension id as defined by browserAPI when extension is loaded (default `''`), `serializer` is a function to serialize outgoing message payloads (default is passthrough), `deserializer` is a function to deserialize incoming message payloads (default is passthrough), and patchStrategy is one of the included patching strategies (default is shallow diff) or a custom patching function.
    */
   function Store() {
     var _this = this;
-
     var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOpts,
-        _ref$portName = _ref.portName,
-        portName = _ref$portName === void 0 ? defaultOpts.portName : _ref$portName,
-        _ref$state = _ref.state,
-        state = _ref$state === void 0 ? defaultOpts.state : _ref$state,
-        _ref$extensionId = _ref.extensionId,
-        extensionId = _ref$extensionId === void 0 ? defaultOpts.extensionId : _ref$extensionId,
-        _ref$serializer = _ref.serializer,
-        serializer = _ref$serializer === void 0 ? defaultOpts.serializer : _ref$serializer,
-        _ref$deserializer = _ref.deserializer,
-        deserializer = _ref$deserializer === void 0 ? defaultOpts.deserializer : _ref$deserializer,
-        _ref$patchStrategy = _ref.patchStrategy,
-        patchStrategy = _ref$patchStrategy === void 0 ? defaultOpts.patchStrategy : _ref$patchStrategy;
-
+      _ref$portName = _ref.portName,
+      portName = _ref$portName === void 0 ? defaultOpts.portName : _ref$portName,
+      _ref$state = _ref.state,
+      state = _ref$state === void 0 ? defaultOpts.state : _ref$state,
+      _ref$extensionId = _ref.extensionId,
+      extensionId = _ref$extensionId === void 0 ? defaultOpts.extensionId : _ref$extensionId,
+      _ref$serializer = _ref.serializer,
+      serializer = _ref$serializer === void 0 ? defaultOpts.serializer : _ref$serializer,
+      _ref$deserializer = _ref.deserializer,
+      deserializer = _ref$deserializer === void 0 ? defaultOpts.deserializer : _ref$deserializer,
+      _ref$patchStrategy = _ref.patchStrategy,
+      patchStrategy = _ref$patchStrategy === void 0 ? defaultOpts.patchStrategy : _ref$patchStrategy;
     _classCallCheck(this, Store);
-
     if (!portName) {
       throw new Error('portName is required in options');
     }
-
     if (typeof serializer !== 'function') {
       throw new Error('serializer must be a function');
     }
-
     if (typeof deserializer !== 'function') {
       throw new Error('deserializer must be a function');
     }
-
     if (typeof patchStrategy !== 'function') {
       throw new Error('patchStrategy must be one of the included patching strategies or a custom patching function');
     }
-
     this.portName = portName;
     this.readyResolved = false;
     this.readyPromise = new Promise(function (resolve) {
@@ -950,83 +985,71 @@ function () {
     });
     this.browserAPI = getBrowserAPI();
     this.extensionId = extensionId; // keep the extensionId as an instance variable
-
     this.port = this.browserAPI.runtime.connect(this.extensionId, {
       name: portName
     });
     this.safetyHandler = this.safetyHandler.bind(this);
-
     if (this.browserAPI.runtime.onMessage) {
       this.safetyMessage = this.browserAPI.runtime.onMessage.addListener(this.safetyHandler);
     }
-
     this.serializedPortListener = withDeserializer(deserializer)(function () {
       var _this$port$onMessage;
-
       return (_this$port$onMessage = _this.port.onMessage).addListener.apply(_this$port$onMessage, arguments);
     });
     this.serializedMessageSender = withSerializer(serializer)(function () {
       var _this$browserAPI$runt;
-
       return (_this$browserAPI$runt = _this.browserAPI.runtime).sendMessage.apply(_this$browserAPI$runt, arguments);
     }, 1);
     this.listeners = [];
     this.state = state;
-    this.patchStrategy = patchStrategy; // Don't use shouldDeserialize here, since no one else should be using this port
+    this.patchStrategy = patchStrategy;
 
+    // Don't use shouldDeserialize here, since no one else should be using this port
     this.serializedPortListener(function (message) {
       switch (message.type) {
         case STATE_TYPE:
           _this.replaceState(message.payload);
-
           if (!_this.readyResolved) {
             _this.readyResolved = true;
-
             _this.readyResolve();
           }
-
           break;
-
         case PATCH_STATE_TYPE:
           _this.patchState(message.payload);
-
           break;
-
-        default: // do nothing
-
+        // do nothing
       }
     });
+
     this.dispatch = this.dispatch.bind(this); // add this context to dispatch
+    this.getState = this.getState.bind(this); // add this context to getState
+    this.subscribe = this.subscribe.bind(this); // add this context to subscribe
   }
+
   /**
   * Returns a promise that resolves when the store is ready. Optionally a callback may be passed in instead.
   * @param [function] callback An optional callback that may be passed in and will fire when the store is ready.
   * @return {object} promise A promise that resolves when the store has established a connection with the background page.
   */
-
-
   _createClass(Store, [{
     key: "ready",
     value: function ready() {
       var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
-
       if (cb !== null) {
         return this.readyPromise.then(cb);
       }
-
       return this.readyPromise;
     }
+
     /**
      * Subscribes a listener function for all state changes
      * @param  {function} listener A listener function to be called when store state changes
      * @return {function}          An unsubscribe function which can be called to remove the listener from state updates
      */
-
   }, {
     key: "subscribe",
     value: function subscribe(listener) {
       var _this2 = this;
-
       this.listeners.push(listener);
       return function () {
         _this2.listeners = _this2.listeners.filter(function (l) {
@@ -1034,11 +1057,11 @@ function () {
         });
       };
     }
+
     /**
      * Replaces the state for only the keys in the updated state. Notifies all listeners of state change.
      * @param {object} state the new (partial) redux state
      */
-
   }, {
     key: "patchState",
     value: function patchState(difference) {
@@ -1047,11 +1070,11 @@ function () {
         return l();
       });
     }
+
     /**
      * Replace the current state with a new state. Notifies all listeners of state change.
      * @param  {object} state The new state for the store
      */
-
   }, {
     key: "replaceState",
     value: function replaceState(state) {
@@ -1060,36 +1083,35 @@ function () {
         return l();
       });
     }
+
     /**
      * Get the current state of the store
      * @return {object} the current store state
      */
-
   }, {
     key: "getState",
     value: function getState() {
       return this.state;
     }
+
     /**
      * Stub function to stay consistent with Redux Store API. No-op.
      */
-
   }, {
     key: "replaceReducer",
     value: function replaceReducer() {
       return;
     }
+
     /**
      * Dispatch an action to the background using messaging passing
      * @param  {object} data The action data to dispatch
      * @return {Promise}     Promise that will resolve/reject based on the action response from the background
      */
-
   }, {
     key: "dispatch",
     value: function dispatch(data) {
       var _this3 = this;
-
       return new Promise(function (resolve, reject) {
         _this3.serializedMessageSender(_this3.extensionId, {
           type: DISPATCH_TYPE,
@@ -1102,14 +1124,11 @@ function () {
             reject(lodash_assignin(bgErr, _error));
             return;
           }
-
           var error = resp.error,
-              value = resp.value;
-
+            value = resp.value;
           if (error) {
-            var _bgErr = new Error("".concat(backgroundErrPrefix).concat(error));
-
-            reject(lodash_assignin(_bgErr, error));
+            var bgErr = new Error("".concat(backgroundErrPrefix).concat(error));
+            reject(lodash_assignin(bgErr, error));
           } else {
             resolve(value && value.payload);
           }
@@ -1121,8 +1140,9 @@ function () {
     value: function safetyHandler(message) {
       if (message.action === 'storeReady' && message.portName === this.portName) {
         // Remove Saftey Listener
-        this.browserAPI.runtime.onMessage.removeListener(this.safetyHandler); // Resolve if readyPromise has not been resolved.
+        this.browserAPI.runtime.onMessage.removeListener(this.safetyHandler);
 
+        // Resolve if readyPromise has not been resolved.
         if (!this.readyResolved) {
           this.readyResolved = true;
           this.readyResolve();
@@ -1130,7 +1150,6 @@ function () {
       }
     }
   }]);
-
   return Store;
 }();
 
@@ -1140,35 +1159,30 @@ function compose() {
   for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
     funcs[_key] = arguments[_key];
   }
-
   if (funcs.length === 0) {
     return function (arg) {
       return arg;
     };
   }
-
   if (funcs.length === 1) {
     return funcs[0];
   }
-
   return funcs.reduce(function (a, b) {
     return function () {
       return a(b.apply(void 0, arguments));
     };
   });
-} // Based on redux implementation of applyMiddleware to support all standard
-// redux middlewares
-
+}
 
+// Based on redux implementation of applyMiddleware to support all standard
+// redux middlewares
 function applyMiddleware(store) {
   for (var _len2 = arguments.length, middlewares = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
     middlewares[_key2 - 1] = arguments[_key2];
   }
-
   var _dispatch = function dispatch() {
     throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
   };
-
   var middlewareAPI = {
     getState: store.getState.bind(store),
     dispatch: function dispatch() {
@@ -1192,7 +1206,6 @@ function applyMiddleware(store) {
  *   The change is either `updated`, which is if the value has changed or been added,
  *   or `removed`.
  */
-
 function shallowDiff$1(oldObj, newObj) {
   var difference = [];
   Object.keys(newObj).forEach(function (key) {
@@ -1221,14 +1234,13 @@ function shallowDiff$1(oldObj, newObj) {
  * @param  {function} send         The function used to respond to original message
  * @return {undefined}
  */
-
 var promiseResponder = function promiseResponder(dispatchResult, send) {
   Promise.resolve(dispatchResult).then(function (res) {
     send({
       error: null,
       value: res
     });
-  }).catch(function (err) {
+  })["catch"](function (err) {
     console.error('error dispatching result:', err);
     send({
       error: err.message,
@@ -1236,7 +1248,6 @@ var promiseResponder = function promiseResponder(dispatchResult, send) {
     });
   });
 };
-
 var defaultOpts$1 = {
   portName: DEFAULT_PORT_NAME,
   dispatchResponder: promiseResponder,
@@ -1244,83 +1255,72 @@ var defaultOpts$1 = {
   deserializer: noop,
   diffStrategy: shallowDiff$1
 };
+
 /**
  * Wraps a Redux store so that proxy stores can connect to it.
  * @param {Object} store A Redux store
  * @param {Object} options An object of form {portName, dispatchResponder, serializer, deserializer}, where `portName` is a required string and defines the name of the port for state transition changes, `dispatchResponder` is a function that takes the result of a store dispatch and optionally implements custom logic for responding to the original dispatch message,`serializer` is a function to serialize outgoing message payloads (default is passthrough), `deserializer` is a function to deserialize incoming message payloads (default is passthrough), and diffStrategy is one of the included diffing strategies (default is shallow diff) or a custom diffing function.
  */
-
 var wrapStore = (function (store) {
   var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOpts$1,
-      _ref$portName = _ref.portName,
-      portName = _ref$portName === void 0 ? defaultOpts$1.portName : _ref$portName,
-      _ref$dispatchResponde = _ref.dispatchResponder,
-      dispatchResponder = _ref$dispatchResponde === void 0 ? defaultOpts$1.dispatchResponder : _ref$dispatchResponde,
-      _ref$serializer = _ref.serializer,
-      serializer = _ref$serializer === void 0 ? defaultOpts$1.serializer : _ref$serializer,
-      _ref$deserializer = _ref.deserializer,
-      deserializer = _ref$deserializer === void 0 ? defaultOpts$1.deserializer : _ref$deserializer,
-      _ref$diffStrategy = _ref.diffStrategy,
-      diffStrategy = _ref$diffStrategy === void 0 ? defaultOpts$1.diffStrategy : _ref$diffStrategy;
-
+    _ref$portName = _ref.portName,
+    portName = _ref$portName === void 0 ? defaultOpts$1.portName : _ref$portName,
+    _ref$dispatchResponde = _ref.dispatchResponder,
+    dispatchResponder = _ref$dispatchResponde === void 0 ? defaultOpts$1.dispatchResponder : _ref$dispatchResponde,
+    _ref$serializer = _ref.serializer,
+    serializer = _ref$serializer === void 0 ? defaultOpts$1.serializer : _ref$serializer,
+    _ref$deserializer = _ref.deserializer,
+    deserializer = _ref$deserializer === void 0 ? defaultOpts$1.deserializer : _ref$deserializer,
+    _ref$diffStrategy = _ref.diffStrategy,
+    diffStrategy = _ref$diffStrategy === void 0 ? defaultOpts$1.diffStrategy : _ref$diffStrategy;
   if (!portName) {
     throw new Error('portName is required in options');
   }
-
   if (typeof serializer !== 'function') {
     throw new Error('serializer must be a function');
   }
-
   if (typeof deserializer !== 'function') {
     throw new Error('deserializer must be a function');
   }
-
   if (typeof diffStrategy !== 'function') {
     throw new Error('diffStrategy must be one of the included diffing strategies or a custom diff function');
   }
-
   var browserAPI = getBrowserAPI();
+
   /**
    * Respond to dispatches from UI components
    */
-
   var dispatchResponse = function dispatchResponse(request, sender, sendResponse) {
     if (request.type === DISPATCH_TYPE && request.portName === portName) {
       var action = Object.assign({}, request.payload, {
         _sender: sender
       });
       var dispatchResult = null;
-
       try {
         dispatchResult = store.dispatch(action);
       } catch (e) {
         dispatchResult = Promise.reject(e.message);
         console.error(e);
       }
-
       dispatchResponder(dispatchResult, sendResponse);
       return true;
     }
   };
+
   /**
   * Setup for state updates
   */
-
-
   var connectState = function connectState(port) {
     if (port.name !== portName) {
       return;
     }
-
     var serializedMessagePoster = withSerializer(serializer)(function () {
       return port.postMessage.apply(port, arguments);
     });
     var prevState = store.getState();
-
     var patchState = function patchState() {
       var state = store.getState();
       var diff = diffStrategy(prevState, state);
-
       if (diff.length) {
         prevState = state;
         serializedMessagePoster({
@@ -1328,99 +1328,86 @@ var wrapStore = (function (store) {
           payload: diff
         });
       }
-    }; // Send patched state down connected port on every redux store state change
-
+    };
 
-    var unsubscribe = store.subscribe(patchState); // when the port disconnects, unsubscribe the sendState listener
+    // Send patched state down connected port on every redux store state change
+    var unsubscribe = store.subscribe(patchState);
 
-    port.onDisconnect.addListener(unsubscribe); // Send store's initial state through port
+    // when the port disconnects, unsubscribe the sendState listener
+    port.onDisconnect.addListener(unsubscribe);
 
+    // Send store's initial state through port
     serializedMessagePoster({
       type: STATE_TYPE,
       payload: prevState
     });
   };
-
   var withPayloadDeserializer = withDeserializer(deserializer);
-
   var shouldDeserialize = function shouldDeserialize(request) {
     return request.type === DISPATCH_TYPE && request.portName === portName;
   };
+
   /**
    * Setup action handler
    */
-
-
   withPayloadDeserializer(function () {
     var _browserAPI$runtime$o;
-
     return (_browserAPI$runtime$o = browserAPI.runtime.onMessage).addListener.apply(_browserAPI$runtime$o, arguments);
   })(dispatchResponse, shouldDeserialize);
+
   /**
    * Setup external action handler
    */
-
   if (browserAPI.runtime.onMessageExternal) {
     withPayloadDeserializer(function () {
       var _browserAPI$runtime$o2;
-
       return (_browserAPI$runtime$o2 = browserAPI.runtime.onMessageExternal).addListener.apply(_browserAPI$runtime$o2, arguments);
     })(dispatchResponse, shouldDeserialize);
   } else {
     console.warn('runtime.onMessageExternal is not supported');
   }
+
   /**
    * Setup extended connection
    */
-
-
   browserAPI.runtime.onConnect.addListener(connectState);
+
   /**
    * Setup extended external connection
    */
-
   if (browserAPI.runtime.onConnectExternal) {
     browserAPI.runtime.onConnectExternal.addListener(connectState);
   } else {
     console.warn('runtime.onConnectExternal is not supported');
   }
+
   /**
    * Safety message to tabs for content scripts
    */
-
-
   browserAPI.tabs.query({}, function (tabs) {
-    var _iteratorNormalCompletion = true;
-    var _didIteratorError = false;
-    var _iteratorError = undefined;
-
+    var _iterator = _createForOfIteratorHelper(tabs),
+      _step;
     try {
-      for (var _iterator = tabs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
+      for (_iterator.s(); !(_step = _iterator.n()).done;) {
         var tab = _step.value;
         browserAPI.tabs.sendMessage(tab.id, {
           action: 'storeReady',
           portName: portName
         }, function () {
-          if (chrome.runtime.lastError) {// do nothing - errors can be present
+          if (chrome.runtime.lastError) {
+            // do nothing - errors can be present
             // if no content script exists on reciever
           }
         });
       }
     } catch (err) {
-      _didIteratorError = true;
-      _iteratorError = err;
+      _iterator.e(err);
     } finally {
-      try {
-        if (!_iteratorNormalCompletion && _iterator.return != null) {
-          _iterator.return();
-        }
-      } finally {
-        if (_didIteratorError) {
-          throw _iteratorError;
-        }
-      }
+      _iterator.f();
     }
-  }); // For non-tab based
+  });
+
+  // For non-tab based
   // TODO: Find use case for this. Ommiting until then.
   // browserAPI.runtime.sendMessage(null, {action: 'storeReady'});
 });
@@ -1435,11 +1422,9 @@ var alias = (function (aliases) {
     return function (next) {
       return function (action) {
         var alias = aliases[action.type];
-
         if (alias) {
           return next(alias(action));
         }
-
         return next(action);
       };
     };
@@ -1453,4 +1438,4 @@ exports.wrapStore = wrapStore;
 
 Object.defineProperty(exports, '__esModule', { value: true });
 
-}));
+})));
diff --git a/dist/webext-redux.min.js b/dist/webext-redux.min.js
index 654ddfb55ebbea03da56696772c6c42c6bd5820b..b3a378738099357c8997ccec91647061db50f947 100644
--- a/dist/webext-redux.min.js
+++ b/dist/webext-redux.min.js
@@ -1 +1 @@
-!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).WebextRedux={})}(this,(function(e){"use strict";function t(e,t){for(var r=0;t.length>r;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e){for(var t=1;arguments.length>t;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),o.forEach((function(t){r(e,t,n[t])}))}return e}function o(e){return function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);e.length>t;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var i=9007199254740991,a="[object Arguments]",s="[object Function]",u="[object GeneratorFunction]",c=/^(?:0|[1-9]\d*)$/;function l(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}var f=Object.prototype,d=f.hasOwnProperty,p=f.toString,h=f.propertyIsEnumerable,y=Math.max;function v(e,t){var r=P(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&j(e)}(e)&&d.call(e,"callee")&&(!h.call(e,"callee")||p.call(e)==a)}(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],n=r.length,o=!!n;for(var i in e)!t&&!d.call(e,i)||o&&("length"==i||b(i,n))||r.push(i);return r}function g(e,t,r){var n=e[t];d.call(e,t)&&w(n,r)&&(void 0!==r||t in e)||(e[t]=r)}function m(e){if(!A(e))return function(e){var t=[];if(null!=e)for(var r in Object(e))t.push(r);return t}(e);var t,r,n=(t=e)===("function"==typeof(r=t&&t.constructor)&&r.prototype||f),o=[];for(var i in e)("constructor"!=i||!n&&d.call(e,i))&&o.push(i);return o}function b(e,t){return!!(t=null==t?i:t)&&("number"==typeof e||c.test(e))&&e>-1&&e%1==0&&t>e}function w(e,t){return e===t||e!=e&&t!=t}var E,S,x,P=Array.isArray;function j(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&i>=e}(e.length)&&!function(e){var t=A(e)?p.call(e):"";return t==s||t==u}(e)}function A(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}var O=(E=function(e,t){!function(e,t,r,n){r||(r={});for(var o=-1,i=t.length;++o<i;){var a=t[o],s=n?n(r[a],e[a],a,r,e):void 0;g(r,a,void 0===s?e[a]:s)}}(t,function(e){return j(e)?v(e,!0):m(e)}(t),e)},S=function(e,t){var r=-1,n=t.length,o=n>1?t[n-1]:void 0,i=n>2?t[2]:void 0;for(o=E.length>3&&"function"==typeof o?(n--,o):void 0,i&&function(e,t,r){if(!A(r))return!1;var n=typeof t;return!!("number"==n?j(r)&&b(t,r.length):"string"==n&&t in r)&&w(r[t],e)}(t[0],t[1],i)&&(o=3>n?void 0:o,n=1),e=Object(e);++r<n;){var a=t[r];a&&E(e,a,r,o)}return e},x=y(void 0===x?S.length-1:x,0),function(){for(var e=arguments,t=-1,r=y(e.length-x,0),n=Array(r);++t<r;)n[t]=e[x+t];t=-1;for(var o=Array(x+1);++t<x;)o[t]=e[t];return o[x]=n,l(S,this,o)}),k="chromex.state",z="chromex.patch_state",M=function(e){return e},I=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:M;return n({},e,e.payload?{payload:t(e.payload)}:{})},N=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:M,r=arguments.length>2?arguments[2]:void 0;return r?function(n){for(var o=arguments.length,i=Array(o>1?o-1:0),a=1;o>a;a++)i[a-1]=arguments[a];return r.apply(void 0,[n].concat(i))?e.apply(void 0,[I(n,t)].concat(i)):e.apply(void 0,[n].concat(i))}:function(r){for(var n=arguments.length,o=Array(n>1?n-1:0),i=1;n>i;i++)o[i-1]=arguments[i];return e.apply(void 0,[I(r,t)].concat(o))}},R=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:M;return function(t){return function(r,n){return t(N(r,e,n))}}},L=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:M;return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return function(){for(var n=arguments.length,o=Array(n),i=0;n>i;i++)o[i]=arguments[i];if(r>=o.length)throw Error("Message in request could not be serialized. "+"Expected message in position ".concat(r," but only received ").concat(o.length," args."));return o[r]=I(o[r],e),t.apply(void 0,o)}}},_="updated",C="removed";function H(){var e;try{e=self.chrome||self.browser||browser}catch(t){e=browser}if(!e)throw Error("Browser API is not present");return e}var q="\nLooks like there is an error in the background page. You might want to inspect your background page for more details.\n",D={portName:"chromex.port_name",state:{},extensionId:null,serializer:M,deserializer:M,patchStrategy:function(e,t){var r=Object.assign({},e);return t.forEach((function(e){var t=e.key,n=e.value;switch(e.change){case _:r[t]=n;break;case C:Reflect.deleteProperty(r,t)}})),r}};function F(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}var T={portName:"chromex.port_name",dispatchResponder:function(e,t){Promise.resolve(e).then((function(e){t({error:null,value:e})})).catch((function(e){console.error("error dispatching result:",e),t({error:e.message,value:null})}))},serializer:M,deserializer:M,diffStrategy:function(e,t){var r=[];return Object.keys(t).forEach((function(n){e[n]!==t[n]&&r.push({key:n,value:t[n],change:_})})),Object.keys(e).forEach((function(e){t.hasOwnProperty(e)||r.push({key:e,change:C})})),r}};e.Store=function(){function e(){var t=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:D,n=r.portName,o=void 0===n?D.portName:n,i=r.state,a=void 0===i?D.state:i,s=r.extensionId,u=void 0===s?D.extensionId:s,c=r.serializer,l=void 0===c?D.serializer:c,f=r.deserializer,d=void 0===f?D.deserializer:f,p=r.patchStrategy,h=void 0===p?D.patchStrategy:p;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!o)throw Error("portName is required in options");if("function"!=typeof l)throw Error("serializer must be a function");if("function"!=typeof d)throw Error("deserializer must be a function");if("function"!=typeof h)throw Error("patchStrategy must be one of the included patching strategies or a custom patching function");this.portName=o,this.readyResolved=!1,this.readyPromise=new Promise((function(e){return t.readyResolve=e})),this.browserAPI=H(),this.extensionId=u,this.port=this.browserAPI.runtime.connect(this.extensionId,{name:o}),this.safetyHandler=this.safetyHandler.bind(this),this.browserAPI.runtime.onMessage&&(this.safetyMessage=this.browserAPI.runtime.onMessage.addListener(this.safetyHandler)),this.serializedPortListener=R(d)((function(){var e;return(e=t.port.onMessage).addListener.apply(e,arguments)})),this.serializedMessageSender=L(l)((function(){var e;return(e=t.browserAPI.runtime).sendMessage.apply(e,arguments)}),1),this.listeners=[],this.state=a,this.patchStrategy=h,this.serializedPortListener((function(e){switch(e.type){case k:t.replaceState(e.payload),t.readyResolved||(t.readyResolved=!0,t.readyResolve());break;case z:t.patchState(e.payload)}})),this.dispatch=this.dispatch.bind(this)}var r,n,o;return r=e,(n=[{key:"ready",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return null!==e?this.readyPromise.then(e):this.readyPromise}},{key:"subscribe",value:function(e){var t=this;return this.listeners.push(e),function(){t.listeners=t.listeners.filter((function(t){return t!==e}))}}},{key:"patchState",value:function(e){this.state=this.patchStrategy(this.state,e),this.listeners.forEach((function(e){return e()}))}},{key:"replaceState",value:function(e){this.state=e,this.listeners.forEach((function(e){return e()}))}},{key:"getState",value:function(){return this.state}},{key:"replaceReducer",value:function(){}},{key:"dispatch",value:function(e){var t=this;return new Promise((function(r,n){t.serializedMessageSender(t.extensionId,{type:"chromex.dispatch",portName:t.portName,payload:e},null,(function(e){if(e){var o=e.error,i=e.value;if(o){var a=Error("".concat(q).concat(o));n(O(a,o))}else r(i&&i.payload)}else{var s=t.browserAPI.runtime.lastError,u=Error("".concat(q).concat(s));n(O(u,s))}}))}))}},{key:"safetyHandler",value:function(e){"storeReady"===e.action&&e.portName===this.portName&&(this.browserAPI.runtime.onMessage.removeListener(this.safetyHandler),this.readyResolved||(this.readyResolved=!0,this.readyResolve()))}}])&&t(r.prototype,n),o&&t(r,o),e}(),e.alias=function(e){return function(){return function(t){return function(r){var n=e[r.type];return t(n?n(r):r)}}}},e.applyMiddleware=function(e){for(var t=arguments.length,r=Array(t>1?t-1:0),n=1;t>n;n++)r[n-1]=arguments[n];var i=function(){throw Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},a={getState:e.getState.bind(e),dispatch:function(){return i.apply(void 0,arguments)}};return r=(r||[]).map((function(e){return e(a)})),i=F.apply(void 0,o(r))(e.dispatch),e.dispatch=i,e},e.wrapStore=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:T,r=t.portName,n=void 0===r?T.portName:r,o=t.dispatchResponder,i=void 0===o?T.dispatchResponder:o,a=t.serializer,s=void 0===a?T.serializer:a,u=t.deserializer,c=void 0===u?T.deserializer:u,l=t.diffStrategy,f=void 0===l?T.diffStrategy:l;if(!n)throw Error("portName is required in options");if("function"!=typeof s)throw Error("serializer must be a function");if("function"!=typeof c)throw Error("deserializer must be a function");if("function"!=typeof f)throw Error("diffStrategy must be one of the included diffing strategies or a custom diff function");var d=H(),p=function(t,r,o){if("chromex.dispatch"===t.type&&t.portName===n){var a=Object.assign({},t.payload,{_sender:r}),s=null;try{s=e.dispatch(a)}catch(e){s=Promise.reject(e.message),console.error(e)}return i(s,o),!0}},h=function(t){if(t.name===n){var r=L(s)((function(){return t.postMessage.apply(t,arguments)})),o=e.getState(),i=e.subscribe((function(){var t=e.getState(),n=f(o,t);n.length&&(o=t,r({type:z,payload:n}))}));t.onDisconnect.addListener(i),r({type:k,payload:o})}},y=R(c),v=function(e){return"chromex.dispatch"===e.type&&e.portName===n};y((function(){var e;return(e=d.runtime.onMessage).addListener.apply(e,arguments)}))(p,v),d.runtime.onMessageExternal?y((function(){var e;return(e=d.runtime.onMessageExternal).addListener.apply(e,arguments)}))(p,v):console.warn("runtime.onMessageExternal is not supported"),d.runtime.onConnect.addListener(h),d.runtime.onConnectExternal?d.runtime.onConnectExternal.addListener(h):console.warn("runtime.onConnectExternal is not supported"),d.tabs.query({},(function(e){var t=!0,r=!1,o=void 0;try{for(var i,a=e[Symbol.iterator]();!(t=(i=a.next()).done);t=!0){d.tabs.sendMessage(i.value.id,{action:"storeReady",portName:n},(function(){chrome}))}}catch(e){r=!0,o=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw o}}}))},Object.defineProperty(e,"__esModule",{value:!0})}));
+!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).WebextRedux={})}(this,(function(e){"use strict";function t(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function r(e){for(var r=1;arguments.length>r;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?t(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var r=0;t.length>r;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e){return function(e){if(Array.isArray(e))return u(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||s(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){if(e){if("string"==typeof e)return u(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);t>r;r++)n[r]=e[r];return n}function c(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=s(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return e.length>n?{done:!1,value:e[n++]}:{done:!0}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){u=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(u)throw i}}}}var l=/^(?:0|[1-9]\d*)$/;function f(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}var d=Object.prototype,p=d.hasOwnProperty,h=d.toString,y=d.propertyIsEnumerable,v=Math.max;function g(e,t){var r=P(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&x(e)}(e)&&p.call(e,"callee")&&(!y.call(e,"callee")||"[object Arguments]"==h.call(e))}(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],n=r.length,o=!!n;for(var i in e)!t&&!p.call(e,i)||o&&("length"==i||w(i,n))||r.push(i);return r}function m(e,t,r){var n=e[t];p.call(e,t)&&S(n,r)&&(void 0!==r||t in e)||(e[t]=r)}function b(e){if(!A(e))return function(e){var t=[];if(null!=e)for(var r in Object(e))t.push(r);return t}(e);var t,r,n=(t=e)===("function"==typeof(r=t&&t.constructor)&&r.prototype||d),o=[];for(var i in e)("constructor"!=i||!n&&p.call(e,i))&&o.push(i);return o}function w(e,t){return!!(t=null==t?9007199254740991:t)&&("number"==typeof e||l.test(e))&&e>-1&&e%1==0&&t>e}function S(e,t){return e===t||e!=e&&t!=t}var j,O,E,P=Array.isArray;function x(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&9007199254740991>=e}(e.length)&&!function(e){var t=A(e)?h.call(e):"";return"[object Function]"==t||"[object GeneratorFunction]"==t}(e)}function A(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}var k=(j=function(e,t){!function(e,t,r,n){r||(r={});for(var o=-1,i=t.length;++o<i;){var a=t[o],s=n?n(r[a],e[a],a,r,e):void 0;m(r,a,void 0===s?e[a]:s)}}(t,function(e){return x(e)?g(e,!0):b(e)}(t),e)},O=function(e,t){var r=-1,n=t.length,o=n>1?t[n-1]:void 0,i=n>2?t[2]:void 0;for(o=j.length>3&&"function"==typeof o?(n--,o):void 0,i&&function(e,t,r){if(!A(r))return!1;var n=typeof t;return!!("number"==n?x(r)&&w(t,r.length):"string"==n&&t in r)&&S(r[t],e)}(t[0],t[1],i)&&(o=3>n?void 0:o,n=1),e=Object(e);++r<n;){var a=t[r];a&&j(e,a,r,o)}return e},E=v(void 0===E?O.length-1:E,0),function(){for(var e=arguments,t=-1,r=v(e.length-E,0),n=Array(r);++t<r;)n[t]=e[E+t];t=-1;for(var o=Array(E+1);++t<E;)o[t]=e[t];return o[E]=n,f(O,this,o)}),z=function(e){return e},I=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:z;return r(r({},e),e.payload?{payload:t(e.payload)}:{})},M=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:z,r=arguments.length>2?arguments[2]:void 0;return r?function(n){for(var o=arguments.length,i=Array(o>1?o-1:0),a=1;o>a;a++)i[a-1]=arguments[a];return r.apply(void 0,[n].concat(i))?e.apply(void 0,[I(n,t)].concat(i)):e.apply(void 0,[n].concat(i))}:function(r){for(var n=arguments.length,o=Array(n>1?n-1:0),i=1;n>i;i++)o[i-1]=arguments[i];return e.apply(void 0,[I(r,t)].concat(o))}},N=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:z;return function(t){return function(r,n){return t(M(r,e,n))}}},R=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:z;return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return function(){for(var n=arguments.length,o=Array(n),i=0;n>i;i++)o[i]=arguments[i];if(r>=o.length)throw Error("Message in request could not be serialized. "+"Expected message in position ".concat(r," but only received ").concat(o.length," args."));return o[r]=I(o[r],e),t.apply(void 0,o)}}};function L(){var e;try{e=self.chrome||self.browser||browser}catch(t){e=browser}if(!e)throw Error("Browser API is not present");return e}var _="\nLooks like there is an error in the background page. You might want to inspect your background page for more details.\n",C={portName:"chromex.port_name",state:{},extensionId:null,serializer:z,deserializer:z,patchStrategy:function(e,t){var r=Object.assign({},e);return t.forEach((function(e){var t=e.key,n=e.value;switch(e.change){case"updated":r[t]=n;break;case"removed":Reflect.deleteProperty(r,t)}})),r}};function D(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}var H={portName:"chromex.port_name",dispatchResponder:function(e,t){Promise.resolve(e).then((function(e){t({error:null,value:e})})).catch((function(e){console.error("error dispatching result:",e),t({error:e.message,value:null})}))},serializer:z,deserializer:z,diffStrategy:function(e,t){var r=[];return Object.keys(t).forEach((function(n){e[n]!==t[n]&&r.push({key:n,value:t[n],change:"updated"})})),Object.keys(e).forEach((function(e){t.hasOwnProperty(e)||r.push({key:e,change:"removed"})})),r}};e.Store=function(){function e(){var t=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:C,o=r.portName,i=void 0===o?C.portName:o,a=r.state,s=void 0===a?C.state:a,u=r.extensionId,c=void 0===u?C.extensionId:u,l=r.serializer,f=void 0===l?C.serializer:l,d=r.deserializer,p=void 0===d?C.deserializer:d,h=r.patchStrategy,y=void 0===h?C.patchStrategy:h;if(n(this,e),!i)throw Error("portName is required in options");if("function"!=typeof f)throw Error("serializer must be a function");if("function"!=typeof p)throw Error("deserializer must be a function");if("function"!=typeof y)throw Error("patchStrategy must be one of the included patching strategies or a custom patching function");this.portName=i,this.readyResolved=!1,this.readyPromise=new Promise((function(e){return t.readyResolve=e})),this.browserAPI=L(),this.extensionId=c,this.port=this.browserAPI.runtime.connect(this.extensionId,{name:i}),this.safetyHandler=this.safetyHandler.bind(this),this.browserAPI.runtime.onMessage&&(this.safetyMessage=this.browserAPI.runtime.onMessage.addListener(this.safetyHandler)),this.serializedPortListener=N(p)((function(){var e;return(e=t.port.onMessage).addListener.apply(e,arguments)})),this.serializedMessageSender=R(f)((function(){var e;return(e=t.browserAPI.runtime).sendMessage.apply(e,arguments)}),1),this.listeners=[],this.state=s,this.patchStrategy=y,this.serializedPortListener((function(e){switch(e.type){case"chromex.state":t.replaceState(e.payload),t.readyResolved||(t.readyResolved=!0,t.readyResolve());break;case"chromex.patch_state":t.patchState(e.payload)}})),this.dispatch=this.dispatch.bind(this),this.getState=this.getState.bind(this),this.subscribe=this.subscribe.bind(this)}var t,r,i;return t=e,(r=[{key:"ready",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return null!==e?this.readyPromise.then(e):this.readyPromise}},{key:"subscribe",value:function(e){var t=this;return this.listeners.push(e),function(){t.listeners=t.listeners.filter((function(t){return t!==e}))}}},{key:"patchState",value:function(e){this.state=this.patchStrategy(this.state,e),this.listeners.forEach((function(e){return e()}))}},{key:"replaceState",value:function(e){this.state=e,this.listeners.forEach((function(e){return e()}))}},{key:"getState",value:function(){return this.state}},{key:"replaceReducer",value:function(){}},{key:"dispatch",value:function(e){var t=this;return new Promise((function(r,n){t.serializedMessageSender(t.extensionId,{type:"chromex.dispatch",portName:t.portName,payload:e},null,(function(e){if(e){var o=e.error,i=e.value;o?(s=Error("".concat(_).concat(o)),n(k(s,o))):r(i&&i.payload)}else{var a=t.browserAPI.runtime.lastError,s=Error("".concat(_).concat(a));n(k(s,a))}}))}))}},{key:"safetyHandler",value:function(e){"storeReady"===e.action&&e.portName===this.portName&&(this.browserAPI.runtime.onMessage.removeListener(this.safetyHandler),this.readyResolved||(this.readyResolved=!0,this.readyResolve()))}}])&&o(t.prototype,r),i&&o(t,i),Object.defineProperty(t,"prototype",{writable:!1}),e}(),e.alias=function(e){return function(){return function(t){return function(r){var n=e[r.type];return t(n?n(r):r)}}}},e.applyMiddleware=function(e){for(var t=arguments.length,r=Array(t>1?t-1:0),n=1;t>n;n++)r[n-1]=arguments[n];var o=function(){throw Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},i={getState:e.getState.bind(e),dispatch:function(){return o.apply(void 0,arguments)}};return r=(r||[]).map((function(e){return e(i)})),o=D.apply(void 0,a(r))(e.dispatch),e.dispatch=o,e},e.wrapStore=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:H,r=t.portName,n=void 0===r?H.portName:r,o=t.dispatchResponder,i=void 0===o?H.dispatchResponder:o,a=t.serializer,s=void 0===a?H.serializer:a,u=t.deserializer,l=void 0===u?H.deserializer:u,f=t.diffStrategy,d=void 0===f?H.diffStrategy:f;if(!n)throw Error("portName is required in options");if("function"!=typeof s)throw Error("serializer must be a function");if("function"!=typeof l)throw Error("deserializer must be a function");if("function"!=typeof d)throw Error("diffStrategy must be one of the included diffing strategies or a custom diff function");var p=L(),h=function(t,r,o){if("chromex.dispatch"===t.type&&t.portName===n){var a=Object.assign({},t.payload,{_sender:r}),s=null;try{s=e.dispatch(a)}catch(e){s=Promise.reject(e.message),console.error(e)}return i(s,o),!0}},y=function(t){if(t.name===n){var r=R(s)((function(){return t.postMessage.apply(t,arguments)})),o=e.getState(),i=e.subscribe((function(){var t=e.getState(),n=d(o,t);n.length&&(o=t,r({type:"chromex.patch_state",payload:n}))}));t.onDisconnect.addListener(i),r({type:"chromex.state",payload:o})}},v=N(l),g=function(e){return"chromex.dispatch"===e.type&&e.portName===n};v((function(){var e;return(e=p.runtime.onMessage).addListener.apply(e,arguments)}))(h,g),p.runtime.onMessageExternal?v((function(){var e;return(e=p.runtime.onMessageExternal).addListener.apply(e,arguments)}))(h,g):console.warn("runtime.onMessageExternal is not supported"),p.runtime.onConnect.addListener(y),p.runtime.onConnectExternal?p.runtime.onConnectExternal.addListener(y):console.warn("runtime.onConnectExternal is not supported"),p.tabs.query({},(function(e){var t,r=c(e);try{for(r.s();!(t=r.n()).done;){p.tabs.sendMessage(t.value.id,{action:"storeReady",portName:n},(function(){chrome}))}}catch(e){r.e(e)}finally{r.f()}}))},Object.defineProperty(e,"__esModule",{value:!0})}));
diff --git a/lib/alias/alias.js b/lib/alias/alias.js
index 56a76ec630904c555ecfbd76b6e522a9d52e99ad..0d0af0f6d6852bd9a55fc179172155abc2790b74 100644
--- a/lib/alias/alias.js
+++ b/lib/alias/alias.js
@@ -3,27 +3,22 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = void 0;
-
+exports["default"] = void 0;
 /**
  * Simple middleware intercepts actions and replaces with
  * another by calling an alias function with the original action
  * @type {object} aliases an object that maps action types (keys) to alias functions (values) (e.g. { SOME_ACTION: newActionAliasFunc })
- */
-var _default = function _default(aliases) {
+ */var _default = function _default(aliases) {
   return function () {
     return function (next) {
       return function (action) {
         var alias = aliases[action.type];
-
         if (alias) {
           return next(alias(action));
         }
-
         return next(action);
       };
     };
   };
 };
-
-exports.default = _default;
\ No newline at end of file
+exports["default"] = _default;
\ No newline at end of file
diff --git a/lib/constants/index.js b/lib/constants/index.js
index 32cef40522395e35b9305ac971e6febd3379fc3a..63c659bca8c1967ba673362149e1479228f459ea 100644
--- a/lib/constants/index.js
+++ b/lib/constants/index.js
@@ -3,20 +3,23 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.DEFAULT_PORT_NAME = exports.PATCH_STATE_TYPE = exports.STATE_TYPE = exports.DISPATCH_TYPE = void 0;
+exports.STATE_TYPE = exports.PATCH_STATE_TYPE = exports.DISPATCH_TYPE = exports.DEFAULT_PORT_NAME = void 0;
 // Message type used for dispatch events
 // from the Proxy Stores to background
-var DISPATCH_TYPE = 'chromex.dispatch'; // Message type for state update events from
-// background to Proxy Stores
+var DISPATCH_TYPE = 'chromex.dispatch';
 
-exports.DISPATCH_TYPE = DISPATCH_TYPE;
-var STATE_TYPE = 'chromex.state'; // Message type for state patch events from
+// Message type for state update events from
 // background to Proxy Stores
+exports.DISPATCH_TYPE = DISPATCH_TYPE;
+var STATE_TYPE = 'chromex.state';
 
+// Message type for state patch events from
+// background to Proxy Stores
 exports.STATE_TYPE = STATE_TYPE;
-var PATCH_STATE_TYPE = 'chromex.patch_state'; // The default name for the port communication via
-// react-chrome-redux
+var PATCH_STATE_TYPE = 'chromex.patch_state';
 
+// The default name for the port communication via
+// react-chrome-redux
 exports.PATCH_STATE_TYPE = PATCH_STATE_TYPE;
 var DEFAULT_PORT_NAME = "chromex.port_name";
 exports.DEFAULT_PORT_NAME = DEFAULT_PORT_NAME;
\ No newline at end of file
diff --git a/lib/index.js b/lib/index.js
index 8444e4562f8486900fe19e45430f27d2255dedc7..31cec988e6317cde08d169ef58661d04b0fba2b9 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -6,34 +6,29 @@ Object.defineProperty(exports, "__esModule", {
 Object.defineProperty(exports, "Store", {
   enumerable: true,
   get: function get() {
-    return _Store.default;
+    return _Store["default"];
   }
 });
-Object.defineProperty(exports, "applyMiddleware", {
+Object.defineProperty(exports, "alias", {
   enumerable: true,
   get: function get() {
-    return _applyMiddleware.default;
+    return _alias["default"];
   }
 });
-Object.defineProperty(exports, "wrapStore", {
+Object.defineProperty(exports, "applyMiddleware", {
   enumerable: true,
   get: function get() {
-    return _wrapStore.default;
+    return _applyMiddleware["default"];
   }
 });
-Object.defineProperty(exports, "alias", {
+Object.defineProperty(exports, "wrapStore", {
   enumerable: true,
   get: function get() {
-    return _alias.default;
+    return _wrapStore["default"];
   }
 });
-
 var _Store = _interopRequireDefault(require("./store/Store"));
-
 var _applyMiddleware = _interopRequireDefault(require("./store/applyMiddleware"));
-
 var _wrapStore = _interopRequireDefault(require("./wrap-store/wrapStore"));
-
 var _alias = _interopRequireDefault(require("./alias/alias"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
\ No newline at end of file
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
\ No newline at end of file
diff --git a/lib/serialization.js b/lib/serialization.js
index 37fb3c04cbf034b02c5c67503f669c965c02d0d5..6d1c95b603f92477431e03cba20ccc584bc6a278 100644
--- a/lib/serialization.js
+++ b/lib/serialization.js
@@ -4,28 +4,22 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.withSerializer = exports.withDeserializer = exports.noop = void 0;
-
-function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }
-
+function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
+function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
 function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
 var noop = function noop(payload) {
   return payload;
 };
-
 exports.noop = noop;
-
 var transformPayload = function transformPayload(message) {
   var transformer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
-  return _objectSpread({}, message, message.payload ? {
+  return _objectSpread(_objectSpread({}, message), message.payload ? {
     payload: transformer(message.payload)
   } : {});
 };
-
 var deserializeListener = function deserializeListener(listener) {
   var deserializer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
   var shouldDeserialize = arguments.length > 2 ? arguments[2] : undefined;
-
   // If a shouldDeserialize function is passed, return a function that uses it
   // to check if any given message payload should be deserialized
   if (shouldDeserialize) {
@@ -33,24 +27,21 @@ var deserializeListener = function deserializeListener(listener) {
       for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
         args[_key - 1] = arguments[_key];
       }
-
       if (shouldDeserialize.apply(void 0, [message].concat(args))) {
         return listener.apply(void 0, [transformPayload(message, deserializer)].concat(args));
       }
-
       return listener.apply(void 0, [message].concat(args));
     };
-  } // Otherwise, return a function that tries to deserialize on every message
-
-
+  }
+  // Otherwise, return a function that tries to deserialize on every message
   return function (message) {
     for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
       args[_key2 - 1] = arguments[_key2];
     }
-
     return listener.apply(void 0, [transformPayload(message, deserializer)].concat(args));
   };
 };
+
 /**
  * A function returned from withDeserializer that, when called, wraps addListenerFn with the
  * deserializer passed to withDeserializer.
@@ -87,8 +78,6 @@ var deserializeListener = function deserializeListener(listener) {
  *   chrome.runtime.sendMessage("{'payload':{'prop':4}}");
  *   //Payload: "{'prop':4}";
  */
-
-
 var withDeserializer = function withDeserializer() {
   var deserializer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;
   return function (addListenerFn) {
@@ -97,6 +86,7 @@ var withDeserializer = function withDeserializer() {
     };
   };
 };
+
 /**
  * Given a serializer, returns a function that takes a message sending
  * function as its sole argument and returns a wrapped message sender that
@@ -111,10 +101,7 @@ var withDeserializer = function withDeserializer() {
  *   serializedChromeSender({ payload: { prop: 4 }})
  *   //Payload: "{'prop':4}"
  */
-
-
 exports.withDeserializer = withDeserializer;
-
 var withSerializer = function withSerializer() {
   var serializer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;
   return function (sendMessageFn) {
@@ -123,15 +110,12 @@ var withSerializer = function withSerializer() {
       for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
         args[_key3] = arguments[_key3];
       }
-
       if (args.length <= messageArgIndex) {
         throw new Error("Message in request could not be serialized. " + "Expected message in position ".concat(messageArgIndex, " but only received ").concat(args.length, " args."));
       }
-
       args[messageArgIndex] = transformPayload(args[messageArgIndex], serializer);
       return sendMessageFn.apply(void 0, args);
     };
   };
 };
-
 exports.withSerializer = withSerializer;
\ No newline at end of file
diff --git a/lib/store/Store.js b/lib/store/Store.js
index 37dfeee31e21dc7a359104b823f7c80983d76332..ce5e0f845a1c906439dd14426d50c4586fd93a10 100644
--- a/lib/store/Store.js
+++ b/lib/store/Store.js
@@ -3,26 +3,16 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = void 0;
-
+exports["default"] = void 0;
 var _lodash = _interopRequireDefault(require("lodash.assignin"));
-
 var _constants = require("../constants");
-
 var _serialization = require("../serialization");
-
 var _patch = _interopRequireDefault(require("../strategies/shallowDiff/patch"));
-
 var _util = require("../util");
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
 function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
 function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
-
-function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }
-
+function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
 var backgroundErrPrefix = '\nLooks like there is an error in the background page. ' + 'You might want to inspect your background page for more details.\n';
 var defaultOpts = {
   portName: _constants.DEFAULT_PORT_NAME,
@@ -30,51 +20,41 @@ var defaultOpts = {
   extensionId: null,
   serializer: _serialization.noop,
   deserializer: _serialization.noop,
-  patchStrategy: _patch.default
+  patchStrategy: _patch["default"]
 };
-
-var Store =
-/*#__PURE__*/
-function () {
+var Store = /*#__PURE__*/function () {
   /**
    * Creates a new Proxy store
    * @param  {object} options An object of form {portName, state, extensionId, serializer, deserializer, diffStrategy}, where `portName` is a required string and defines the name of the port for state transition changes, `state` is the initial state of this store (default `{}`) `extensionId` is the extension id as defined by browserAPI when extension is loaded (default `''`), `serializer` is a function to serialize outgoing message payloads (default is passthrough), `deserializer` is a function to deserialize incoming message payloads (default is passthrough), and patchStrategy is one of the included patching strategies (default is shallow diff) or a custom patching function.
    */
   function Store() {
     var _this = this;
-
     var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOpts,
-        _ref$portName = _ref.portName,
-        portName = _ref$portName === void 0 ? defaultOpts.portName : _ref$portName,
-        _ref$state = _ref.state,
-        state = _ref$state === void 0 ? defaultOpts.state : _ref$state,
-        _ref$extensionId = _ref.extensionId,
-        extensionId = _ref$extensionId === void 0 ? defaultOpts.extensionId : _ref$extensionId,
-        _ref$serializer = _ref.serializer,
-        serializer = _ref$serializer === void 0 ? defaultOpts.serializer : _ref$serializer,
-        _ref$deserializer = _ref.deserializer,
-        deserializer = _ref$deserializer === void 0 ? defaultOpts.deserializer : _ref$deserializer,
-        _ref$patchStrategy = _ref.patchStrategy,
-        patchStrategy = _ref$patchStrategy === void 0 ? defaultOpts.patchStrategy : _ref$patchStrategy;
-
+      _ref$portName = _ref.portName,
+      portName = _ref$portName === void 0 ? defaultOpts.portName : _ref$portName,
+      _ref$state = _ref.state,
+      state = _ref$state === void 0 ? defaultOpts.state : _ref$state,
+      _ref$extensionId = _ref.extensionId,
+      extensionId = _ref$extensionId === void 0 ? defaultOpts.extensionId : _ref$extensionId,
+      _ref$serializer = _ref.serializer,
+      serializer = _ref$serializer === void 0 ? defaultOpts.serializer : _ref$serializer,
+      _ref$deserializer = _ref.deserializer,
+      deserializer = _ref$deserializer === void 0 ? defaultOpts.deserializer : _ref$deserializer,
+      _ref$patchStrategy = _ref.patchStrategy,
+      patchStrategy = _ref$patchStrategy === void 0 ? defaultOpts.patchStrategy : _ref$patchStrategy;
     _classCallCheck(this, Store);
-
     if (!portName) {
       throw new Error('portName is required in options');
     }
-
     if (typeof serializer !== 'function') {
       throw new Error('serializer must be a function');
     }
-
     if (typeof deserializer !== 'function') {
       throw new Error('deserializer must be a function');
     }
-
     if (typeof patchStrategy !== 'function') {
       throw new Error('patchStrategy must be one of the included patching strategies or a custom patching function');
     }
-
     this.portName = portName;
     this.readyResolved = false;
     this.readyPromise = new Promise(function (resolve) {
@@ -82,83 +62,72 @@ function () {
     });
     this.browserAPI = (0, _util.getBrowserAPI)();
     this.extensionId = extensionId; // keep the extensionId as an instance variable
-
     this.port = this.browserAPI.runtime.connect(this.extensionId, {
       name: portName
     });
     this.safetyHandler = this.safetyHandler.bind(this);
-
     if (this.browserAPI.runtime.onMessage) {
       this.safetyMessage = this.browserAPI.runtime.onMessage.addListener(this.safetyHandler);
     }
-
     this.serializedPortListener = (0, _serialization.withDeserializer)(deserializer)(function () {
       var _this$port$onMessage;
-
       return (_this$port$onMessage = _this.port.onMessage).addListener.apply(_this$port$onMessage, arguments);
     });
     this.serializedMessageSender = (0, _serialization.withSerializer)(serializer)(function () {
       var _this$browserAPI$runt;
-
       return (_this$browserAPI$runt = _this.browserAPI.runtime).sendMessage.apply(_this$browserAPI$runt, arguments);
     }, 1);
     this.listeners = [];
     this.state = state;
-    this.patchStrategy = patchStrategy; // Don't use shouldDeserialize here, since no one else should be using this port
+    this.patchStrategy = patchStrategy;
 
+    // Don't use shouldDeserialize here, since no one else should be using this port
     this.serializedPortListener(function (message) {
       switch (message.type) {
         case _constants.STATE_TYPE:
           _this.replaceState(message.payload);
-
           if (!_this.readyResolved) {
             _this.readyResolved = true;
-
             _this.readyResolve();
           }
-
           break;
-
         case _constants.PATCH_STATE_TYPE:
           _this.patchState(message.payload);
-
           break;
-
-        default: // do nothing
-
+        default:
+        // do nothing
       }
     });
+
     this.dispatch = this.dispatch.bind(this); // add this context to dispatch
+    this.getState = this.getState.bind(this); // add this context to getState
+    this.subscribe = this.subscribe.bind(this); // add this context to subscribe
   }
+
   /**
   * Returns a promise that resolves when the store is ready. Optionally a callback may be passed in instead.
   * @param [function] callback An optional callback that may be passed in and will fire when the store is ready.
   * @return {object} promise A promise that resolves when the store has established a connection with the background page.
   */
-
-
   _createClass(Store, [{
     key: "ready",
     value: function ready() {
       var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
-
       if (cb !== null) {
         return this.readyPromise.then(cb);
       }
-
       return this.readyPromise;
     }
+
     /**
      * Subscribes a listener function for all state changes
      * @param  {function} listener A listener function to be called when store state changes
      * @return {function}          An unsubscribe function which can be called to remove the listener from state updates
      */
-
   }, {
     key: "subscribe",
     value: function subscribe(listener) {
       var _this2 = this;
-
       this.listeners.push(listener);
       return function () {
         _this2.listeners = _this2.listeners.filter(function (l) {
@@ -166,11 +135,11 @@ function () {
         });
       };
     }
+
     /**
      * Replaces the state for only the keys in the updated state. Notifies all listeners of state change.
      * @param {object} state the new (partial) redux state
      */
-
   }, {
     key: "patchState",
     value: function patchState(difference) {
@@ -179,11 +148,11 @@ function () {
         return l();
       });
     }
+
     /**
      * Replace the current state with a new state. Notifies all listeners of state change.
      * @param  {object} state The new state for the store
      */
-
   }, {
     key: "replaceState",
     value: function replaceState(state) {
@@ -192,36 +161,35 @@ function () {
         return l();
       });
     }
+
     /**
      * Get the current state of the store
      * @return {object} the current store state
      */
-
   }, {
     key: "getState",
     value: function getState() {
       return this.state;
     }
+
     /**
      * Stub function to stay consistent with Redux Store API. No-op.
      */
-
   }, {
     key: "replaceReducer",
     value: function replaceReducer() {
       return;
     }
+
     /**
      * Dispatch an action to the background using messaging passing
      * @param  {object} data The action data to dispatch
      * @return {Promise}     Promise that will resolve/reject based on the action response from the background
      */
-
   }, {
     key: "dispatch",
     value: function dispatch(data) {
       var _this3 = this;
-
       return new Promise(function (resolve, reject) {
         _this3.serializedMessageSender(_this3.extensionId, {
           type: _constants.DISPATCH_TYPE,
@@ -231,17 +199,14 @@ function () {
           if (!resp) {
             var _error = _this3.browserAPI.runtime.lastError;
             var bgErr = new Error("".concat(backgroundErrPrefix).concat(_error));
-            reject((0, _lodash.default)(bgErr, _error));
+            reject((0, _lodash["default"])(bgErr, _error));
             return;
           }
-
           var error = resp.error,
-              value = resp.value;
-
+            value = resp.value;
           if (error) {
-            var _bgErr = new Error("".concat(backgroundErrPrefix).concat(error));
-
-            reject((0, _lodash.default)(_bgErr, error));
+            var bgErr = new Error("".concat(backgroundErrPrefix).concat(error));
+            reject((0, _lodash["default"])(bgErr, error));
           } else {
             resolve(value && value.payload);
           }
@@ -253,8 +218,9 @@ function () {
     value: function safetyHandler(message) {
       if (message.action === 'storeReady' && message.portName === this.portName) {
         // Remove Saftey Listener
-        this.browserAPI.runtime.onMessage.removeListener(this.safetyHandler); // Resolve if readyPromise has not been resolved.
+        this.browserAPI.runtime.onMessage.removeListener(this.safetyHandler);
 
+        // Resolve if readyPromise has not been resolved.
         if (!this.readyResolved) {
           this.readyResolved = true;
           this.readyResolve();
@@ -262,9 +228,7 @@ function () {
       }
     }
   }]);
-
   return Store;
 }();
-
 var _default = Store;
-exports.default = _default;
\ No newline at end of file
+exports["default"] = _default;
\ No newline at end of file
diff --git a/lib/store/applyMiddleware.js b/lib/store/applyMiddleware.js
index 270ce1ba2f70588e23ace6f00652fa6dc17c685b..48a2a9d7541c0c4383c921d3314699ed69993382 100644
--- a/lib/store/applyMiddleware.js
+++ b/lib/store/applyMiddleware.js
@@ -3,51 +3,43 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = applyMiddleware;
-
-function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }
-
-function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }
-
-function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }
-
-function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }
-
+exports["default"] = applyMiddleware;
+function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
+function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
+function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
+function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
+function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
+function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
 // Function taken from redux source
 // https://github.com/reactjs/redux/blob/master/src/compose.js
 function compose() {
   for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
     funcs[_key] = arguments[_key];
   }
-
   if (funcs.length === 0) {
     return function (arg) {
       return arg;
     };
   }
-
   if (funcs.length === 1) {
     return funcs[0];
   }
-
   return funcs.reduce(function (a, b) {
     return function () {
       return a(b.apply(void 0, arguments));
     };
   });
-} // Based on redux implementation of applyMiddleware to support all standard
-// redux middlewares
-
+}
 
+// Based on redux implementation of applyMiddleware to support all standard
+// redux middlewares
 function applyMiddleware(store) {
   for (var _len2 = arguments.length, middlewares = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
     middlewares[_key2 - 1] = arguments[_key2];
   }
-
   var _dispatch = function dispatch() {
     throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
   };
-
   var middlewareAPI = {
     getState: store.getState.bind(store),
     dispatch: function dispatch() {
diff --git a/lib/strategies/constants.js b/lib/strategies/constants.js
index 8c64e0611c5a7e58607c375a62b6a905d3c8a1b6..76296895ff44be7f558e7c6f41a601ddf5249b5b 100644
--- a/lib/strategies/constants.js
+++ b/lib/strategies/constants.js
@@ -3,10 +3,11 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.DIFF_STATUS_ARRAY_UPDATED = exports.DIFF_STATUS_KEYS_UPDATED = exports.DIFF_STATUS_REMOVED = exports.DIFF_STATUS_UPDATED = void 0;
+exports.DIFF_STATUS_UPDATED = exports.DIFF_STATUS_REMOVED = exports.DIFF_STATUS_KEYS_UPDATED = exports.DIFF_STATUS_ARRAY_UPDATED = void 0;
 // The `change` value for updated or inserted fields resulting from shallow diff
-var DIFF_STATUS_UPDATED = 'updated'; // The `change` value for removed fields resulting from shallow diff
+var DIFF_STATUS_UPDATED = 'updated';
 
+// The `change` value for removed fields resulting from shallow diff
 exports.DIFF_STATUS_UPDATED = DIFF_STATUS_UPDATED;
 var DIFF_STATUS_REMOVED = 'removed';
 exports.DIFF_STATUS_REMOVED = DIFF_STATUS_REMOVED;
diff --git a/lib/strategies/deepDiff/arrayDiff/diff/apply.js b/lib/strategies/deepDiff/arrayDiff/diff/apply.js
index d186bf505aa63909d1df7db59995f3f223941ce3..beed5b9df77d2876bc4f77c26144b9a9d1aeea32 100644
--- a/lib/strategies/deepDiff/arrayDiff/diff/apply.js
+++ b/lib/strategies/deepDiff/arrayDiff/diff/apply.js
@@ -4,7 +4,6 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.applyPatch = applyPatch;
-
 /**
  * Patches an array based on a patch description returning the patched array.
  *
@@ -15,11 +14,9 @@ exports.applyPatch = applyPatch;
 function applyPatch(a, patch) {
   var segments = [];
   var sameStart = 0;
-
   for (var i = 0; i < patch.length; ++i) {
     var patchItem = patch[i];
     sameStart !== patchItem.oldPos && segments.push(a.slice(sameStart, patchItem.oldPos));
-
     if (patchItem.type === "add") {
       segments.push(patchItem.items);
       sameStart = patchItem.oldPos;
@@ -29,8 +26,8 @@ function applyPatch(a, patch) {
       sameStart = patchItem.oldPos + patchItem.length;
     }
   }
+  sameStart !== a.length && segments.push(a.slice(sameStart));
 
-  sameStart !== a.length && segments.push(a.slice(sameStart)); // eslint-disable-next-line prefer-reflect
-
+  // eslint-disable-next-line prefer-reflect
   return [].concat.apply([], segments);
 }
\ No newline at end of file
diff --git a/lib/strategies/deepDiff/arrayDiff/diff/diff.js b/lib/strategies/deepDiff/arrayDiff/diff/diff.js
index d759fe015099cc47f7a252118402d74f8e3496ac..7ae035c70fc4ae7273e1b4673f90fad2bb2e5112 100644
--- a/lib/strategies/deepDiff/arrayDiff/diff/diff.js
+++ b/lib/strategies/deepDiff/arrayDiff/diff/diff.js
@@ -4,11 +4,8 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.diff = diff;
-
 var _lcs = _interopRequireDefault(require("./lcs"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
 /**
  * Computes the differences between the two arrays.
  *
@@ -25,7 +22,7 @@ function diff(a, b) {
     removed: [],
     added: []
   };
-  (0, _lcs.default)(a, b, compareFunc, function (type, oldArr, oldStart, oldEnd, newArr, newStart, newEnd) {
+  (0, _lcs["default"])(a, b, compareFunc, function (type, oldArr, oldStart, oldEnd, newArr, newStart, newEnd) {
     if (type === "add") {
       for (var i = newStart; i < newEnd; ++i) {
         ret.added.push(newArr[i]);
diff --git a/lib/strategies/deepDiff/arrayDiff/diff/lcs.js b/lib/strategies/deepDiff/arrayDiff/diff/lcs.js
index 6502dd9ed1932e413660b07c86f3f0c9d46b98ae..8b88bb5c21eb2644e92017300eefcf033c203f0a 100644
--- a/lib/strategies/deepDiff/arrayDiff/diff/lcs.js
+++ b/lib/strategies/deepDiff/arrayDiff/diff/lcs.js
@@ -3,10 +3,8 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = bestSubSequence;
-
+exports["default"] = bestSubSequence;
 function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
 /* eslint-disable no-bitwise */
 
 /**
@@ -19,37 +17,30 @@ function _defineProperty(obj, key, value) { if (key in obj) { Object.definePrope
  */
 function lcs(a, b, compareFunc) {
   var M = a.length,
-      N = b.length;
+    N = b.length;
   var MAX = M + N;
   var v = {
     1: 0
   };
-
   for (var d = 0; d <= MAX; ++d) {
     for (var k = -d; k <= d; k += 2) {
       var x = void 0;
-
       if (k === -d || k !== d && v[k - 1] + 1 < v[k + 1]) {
         x = v[k + 1];
       } else {
         x = v[k - 1] + 1;
       }
-
       var y = x - k;
-
       while (x < M && y < N && compareFunc(a[x], b[y])) {
         x++;
         y++;
       }
-
       if (x === M && y === N) {
         return d;
       }
-
       v[k] = x;
     }
   }
-
   return -1; // never reach
 }
 
@@ -60,6 +51,7 @@ var Direct = {
   diagonal: 1 << 2
 };
 Direct.all = Direct.horizontal | Direct.vertical | Direct.diagonal;
+
 /**
  *
  * @param a
@@ -74,17 +66,14 @@ Direct.all = Direct.horizontal | Direct.vertical | Direct.diagonal;
  * @param compareFunc the comparison function used to determine equality (a, b) => boolean
  * @param elementsChanged
  */
-
 function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect, compareFunc, elementsChanged) {
   var _preview, _preview2;
-
   if (d === 0) {
     elementsChanged("same", a, aStart, aEnd, b, bStart, bEnd);
     return;
   } else if (d === aEnd - aStart + (bEnd - bStart)) {
     var removeFirst = (startDirect & Direct.horizontal ? 1 : 0) + (endDirect & Direct.vertical ? 1 : 0);
     var addFirst = (startDirect & Direct.vertical ? 1 : 0) + (endDirect & Direct.horizontal ? 1 : 0);
-
     if (removeFirst >= addFirst) {
       aStart !== aEnd && elementsChanged("remove", a, aStart, aEnd, b, bStart, bStart);
       bStart !== bEnd && elementsChanged("add", a, aEnd, aEnd, b, bStart, bEnd);
@@ -92,15 +81,12 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
       bStart !== bEnd && elementsChanged("add", a, aStart, aStart, b, bStart, bEnd);
       aStart !== aEnd && elementsChanged("remove", a, aStart, aEnd, b, bEnd, bEnd);
     }
-
     return;
   }
-
   var M = aEnd - aStart,
-      N = bEnd - bStart;
+    N = bEnd - bStart;
   var HALF = Math.floor(N / 2);
   var now = {};
-
   for (var k = -d - 1; k <= d + 1; ++k) {
     now[k] = {
       d: Infinity,
@@ -108,7 +94,6 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
       direct: Direct.none
     };
   }
-
   var preview = (_preview = {}, _defineProperty(_preview, -d - 1, {
     d: Infinity,
     segments: 0,
@@ -118,15 +103,12 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
     segments: 0,
     direct: Direct.none
   }), _preview);
-
   for (var y = 0; y <= HALF; ++y) {
     var _ref = [preview, now];
     now = _ref[0];
     preview = _ref[1];
-
     var _loop = function _loop(_k) {
       var x = y + _k;
-
       if (y === 0 && x === 0) {
         now[_k] = {
           d: 0,
@@ -135,7 +117,6 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
         };
         return "continue";
       }
-
       var currentPoints = [{
         direct: Direct.horizontal,
         d: now[_k - 1].d + 1,
@@ -145,7 +126,6 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
         d: preview[_k + 1].d + 1,
         segments: preview[_k + 1].segments + (preview[_k + 1].direct & Direct.vertical ? 0 : 1)
       }];
-
       if (x > 0 && x <= M && y > 0 && y <= N && compareFunc(a[aStart + x - 1], b[bStart + y - 1])) {
         currentPoints.push({
           direct: Direct.diagonal,
@@ -153,14 +133,12 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
           segments: preview[_k].segments + (preview[_k].direct & Direct.diagonal ? 0 : 1)
         });
       }
-
       var bestValue = currentPoints.reduce(function (best, info) {
         if (best.d > info.d) {
           return info;
         } else if (best.d === info.d && best.segments > info.segments) {
           return info;
         }
-
         return best;
       });
       currentPoints.forEach(function (info) {
@@ -170,16 +148,12 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
       });
       now[_k] = bestValue;
     };
-
     for (var _k = -d; _k <= d; ++_k) {
       var _ret = _loop(_k);
-
       if (_ret === "continue") continue;
     }
   }
-
   var now2 = {};
-
   for (var _k2 = -d - 1; _k2 <= d + 1; ++_k2) {
     now2[_k2] = {
       d: Infinity,
@@ -187,7 +161,6 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
       direct: Direct.none
     };
   }
-
   var preview2 = (_preview2 = {}, _defineProperty(_preview2, -d - 1, {
     d: Infinity,
     segments: 0,
@@ -197,15 +170,12 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
     segments: 0,
     direct: Direct.none
   }), _preview2);
-
   for (var _y = N; _y >= HALF; --_y) {
     var _ref2 = [preview2, now2];
     now2 = _ref2[0];
     preview2 = _ref2[1];
-
     var _loop2 = function _loop2(_k3) {
       var x = _y + _k3;
-
       if (_y === N && x === M) {
         now2[_k3] = {
           d: 0,
@@ -214,7 +184,6 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
         };
         return "continue";
       }
-
       var currentPoints = [{
         direct: Direct.horizontal,
         d: now2[_k3 + 1].d + 1,
@@ -224,7 +193,6 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
         d: preview2[_k3 - 1].d + 1,
         segments: preview2[_k3 - 1].segments + (preview2[_k3 - 1].direct & Direct.vertical ? 0 : 1)
       }];
-
       if (x >= 0 && x < M && _y >= 0 && _y < N && compareFunc(a[aStart + x], b[bStart + _y])) {
         currentPoints.push({
           direct: Direct.diagonal,
@@ -232,14 +200,12 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
           segments: preview2[_k3].segments + (preview2[_k3].direct & Direct.diagonal ? 0 : 1)
         });
       }
-
       var bestValue = currentPoints.reduce(function (best, info) {
         if (best.d > info.d) {
           return info;
         } else if (best.d === info.d && best.segments > info.segments) {
           return info;
         }
-
         return best;
       });
       currentPoints.forEach(function (info) {
@@ -249,24 +215,19 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
       });
       now2[_k3] = bestValue;
     };
-
     for (var _k3 = d; _k3 >= -d; --_k3) {
       var _ret2 = _loop2(_k3);
-
       if (_ret2 === "continue") continue;
     }
   }
-
   var best = {
     k: -1,
     d: Infinity,
     segments: 0,
     direct: Direct.none
   };
-
   for (var _k4 = -d; _k4 <= d; ++_k4) {
     var dSum = now[_k4].d + now2[_k4].d;
-
     if (dSum < best.d) {
       best.k = _k4;
       best.d = dSum;
@@ -274,7 +235,6 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
       best.direct = now2[_k4].direct;
     } else if (dSum === best.d) {
       var segments = now[_k4].segments + now2[_k4].segments + (now[_k4].segments & now2[_k4].segments ? 0 : 1);
-
       if (segments < best.segments) {
         best.k = _k4;
         best.d = dSum;
@@ -288,16 +248,15 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
       }
     }
   }
-
   if (HALF + best.k === 0 && HALF === 0) {
     HALF++;
     now[best.k].direct = now2[best.k].direct;
     now2[best.k].direct = preview2[best.k].direct;
   }
-
   getSolution(a, aStart, aStart + HALF + best.k, b, bStart, bStart + HALF, now[best.k].d, startDirect, now2[best.k].direct, compareFunc, elementsChanged);
   getSolution(a, aStart + HALF + best.k, aEnd, b, bStart + HALF, bEnd, now2[best.k].d, now[best.k].direct, endDirect, compareFunc, elementsChanged);
 }
+
 /**
  *
  * @param a
@@ -305,8 +264,6 @@ function getSolution(a, aStart, aEnd, b, bStart, bEnd, d, startDirect, endDirect
  * @param compareFunc the comparison function used to determine equality (a, b) => boolean
  * @param elementsChanged
  */
-
-
 function bestSubSequence(a, b, compareFunc, elementsChanged) {
   var d = lcs(a, b, compareFunc);
   getSolution(a, 0, a.length, b, 0, b.length, d, Direct.diagonal, Direct.all, compareFunc, elementsChanged);
diff --git a/lib/strategies/deepDiff/arrayDiff/diff/patch.js b/lib/strategies/deepDiff/arrayDiff/diff/patch.js
index 0e36337c1f48495f02b59fa116eee00d1cda9919..7f8b61a65f383ee09d93fdd6a6a8f6f322132144 100644
--- a/lib/strategies/deepDiff/arrayDiff/diff/patch.js
+++ b/lib/strategies/deepDiff/arrayDiff/diff/patch.js
@@ -4,11 +4,8 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.getPatch = getPatch;
-
 var _lcs = _interopRequireDefault(require("./lcs"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
 /**
  * Computes the patch necessary to turn array a into array b.
  *
@@ -24,6 +21,7 @@ function getPatch(a, b) {
   var patch = [];
   var lastAdd = null;
   var lastRemove = null;
+
   /**
    *
    * @param {string} type "add" | "remove" | "same"
@@ -34,17 +32,14 @@ function getPatch(a, b) {
    * @param {number} newStart the new start
    * @param {number} newEnd the new end
    */
-
   function pushChange(type, oldArr, oldStart, oldEnd, newArr, newStart, newEnd) {
     if (type === "same") {
       if (lastRemove) {
         patch.push(lastRemove);
       }
-
       if (lastAdd) {
         patch.push(lastAdd);
       }
-
       lastRemove = null;
       lastAdd = null;
     } else if (type === "remove") {
@@ -56,14 +51,11 @@ function getPatch(a, b) {
           items: []
         };
       }
-
       for (var i = oldStart; i < oldEnd; ++i) {
         lastRemove.items.push(oldArr[i]);
       }
-
       if (lastAdd) {
         lastAdd.oldPos += oldEnd - oldStart;
-
         if (lastRemove.oldPos === oldStart) {
           lastRemove.newPos -= oldEnd - oldStart;
         }
@@ -77,14 +69,12 @@ function getPatch(a, b) {
           items: []
         };
       }
-
       for (var _i = newStart; _i < newEnd; ++_i) {
         lastAdd.items.push(newArr[_i]);
       }
     }
   }
-
-  (0, _lcs.default)(a, b, compareFunc, pushChange);
+  (0, _lcs["default"])(a, b, compareFunc, pushChange);
   pushChange("same", [], 0, 0, [], 0, 0);
   return patch;
 }
\ No newline at end of file
diff --git a/lib/strategies/deepDiff/arrayDiff/diff/same.js b/lib/strategies/deepDiff/arrayDiff/diff/same.js
index 35c122c6aeb737a68ffe542d845fd7f68959615b..67d63d28a63826ba10b25a7ffe6180546d2d67fd 100644
--- a/lib/strategies/deepDiff/arrayDiff/diff/same.js
+++ b/lib/strategies/deepDiff/arrayDiff/diff/same.js
@@ -3,12 +3,9 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = _default;
-
+exports["default"] = _default;
 var _lcs = _interopRequireDefault(require("./lcs"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
 /**
  *
  * @param a the base array
@@ -21,7 +18,7 @@ function _default(a, b) {
     return ia === ib;
   };
   var ret = [];
-  (0, _lcs.default)(a, b, compareFunc, function (type, oldArr, oldStart, oldEnd) {
+  (0, _lcs["default"])(a, b, compareFunc, function (type, oldArr, oldStart, oldEnd) {
     if (type === "same") {
       for (var i = oldStart; i < oldEnd; ++i) {
         ret.push(oldArr[i]);
diff --git a/lib/strategies/deepDiff/arrayDiff/index.js b/lib/strategies/deepDiff/arrayDiff/index.js
index dd2a70ae279428b3235a1dba85853fc3f89d4b50..fd0608f7bdb6fc50c1ebef18d837e50f8c7b0846 100644
--- a/lib/strategies/deepDiff/arrayDiff/index.js
+++ b/lib/strategies/deepDiff/arrayDiff/index.js
@@ -9,17 +9,15 @@ var _exportNames = {
 Object.defineProperty(exports, "same", {
   enumerable: true,
   get: function get() {
-    return _same.default;
+    return _same["default"];
   }
 });
-
 var _same = _interopRequireDefault(require("./diff/same"));
-
 var _diff = require("./diff/diff");
-
 Object.keys(_diff).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
+  if (key in exports && exports[key] === _diff[key]) return;
   Object.defineProperty(exports, key, {
     enumerable: true,
     get: function get() {
@@ -27,12 +25,11 @@ Object.keys(_diff).forEach(function (key) {
     }
   });
 });
-
 var _patch = require("./diff/patch");
-
 Object.keys(_patch).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
+  if (key in exports && exports[key] === _patch[key]) return;
   Object.defineProperty(exports, key, {
     enumerable: true,
     get: function get() {
@@ -40,12 +37,11 @@ Object.keys(_patch).forEach(function (key) {
     }
   });
 });
-
 var _apply = require("./diff/apply");
-
 Object.keys(_apply).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
+  if (key in exports && exports[key] === _apply[key]) return;
   Object.defineProperty(exports, key, {
     enumerable: true,
     get: function get() {
@@ -53,5 +49,4 @@ Object.keys(_apply).forEach(function (key) {
     }
   });
 });
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
\ No newline at end of file
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
\ No newline at end of file
diff --git a/lib/strategies/deepDiff/diff.js b/lib/strategies/deepDiff/diff.js
index 0d346aaa9c71e4bc387107a1ff08803669bb1d2a..fae614a6755d9150a06d2457d2c06307b93def44 100644
--- a/lib/strategies/deepDiff/diff.js
+++ b/lib/strategies/deepDiff/diff.js
@@ -3,29 +3,21 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = diffObjects;
-
+exports["default"] = diffObjects;
 var _constants = require("../constants");
-
 var _arrayDiff = require("./arrayDiff");
-
-function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }
-
+function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
+function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
 function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
-function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }
-
+function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
 var objectConstructor = {}.constructor;
-
 function isObject(o) {
   return _typeof(o) === "object" && o !== null && o.constructor === objectConstructor;
 }
-
 function shouldTreatAsValue(oldObj, newObj) {
   var bothAreArrays = Array.isArray(oldObj) && Array.isArray(newObj);
   return !isObject(newObj) && !bothAreArrays || _typeof(newObj) !== _typeof(oldObj);
 }
-
 function diffValues(oldObj, newObj, shouldContinue, context) {
   // If it's null, use the current value
   if (oldObj === null) {
@@ -33,30 +25,30 @@ function diffValues(oldObj, newObj, shouldContinue, context) {
       change: _constants.DIFF_STATUS_UPDATED,
       value: newObj
     };
-  } // If it's a non-object, or if the type is changing, or if it's an array,
-  // just go with the current value.
-
+  }
 
+  // If it's a non-object, or if the type is changing, or if it's an array,
+  // just go with the current value.
   if (shouldTreatAsValue(oldObj, newObj) || !shouldContinue(oldObj, newObj, context)) {
     return {
       change: _constants.DIFF_STATUS_UPDATED,
       value: newObj
     };
   }
-
   if (Array.isArray(oldObj) && Array.isArray(newObj)) {
     return {
       change: _constants.DIFF_STATUS_ARRAY_UPDATED,
       value: (0, _arrayDiff.getPatch)(oldObj, newObj)
     };
-  } // If it's an object, compute the differences for each key.
-
+  }
 
+  // If it's an object, compute the differences for each key.
   return {
     change: _constants.DIFF_STATUS_KEYS_UPDATED,
     value: diffObjects(oldObj, newObj, shouldContinue, context)
   };
 }
+
 /**
  * Performs a deep diff on two objects, created a nested list of patches. For objects, each key is compared.
  * If keys are not equal by reference, diffing continues on the key's corresponding values in the old and new
@@ -72,25 +64,25 @@ function diffValues(oldObj, newObj, shouldContinue, context) {
  * Return false to stop diffing and treat everything under the current key as an updated value
  * @param {*} context
  */
-
-
 function diffObjects(oldObj, newObj) {
   var shouldContinue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {
     return true;
   };
   var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
-  var difference = []; // For each key in the current state,
-  // get the differences in values.
+  var difference = [];
 
+  // For each key in the current state,
+  // get the differences in values.
   Object.keys(newObj).forEach(function (key) {
     if (oldObj[key] !== newObj[key]) {
       difference.push(_objectSpread({
         key: key
       }, diffValues(oldObj[key], newObj[key], shouldContinue, context.concat(key))));
     }
-  }); // For each key previously present,
-  // record its deletion.
+  });
 
+  // For each key previously present,
+  // record its deletion.
   Object.keys(oldObj).forEach(function (key) {
     if (!newObj.hasOwnProperty(key)) {
       difference.push({
diff --git a/lib/strategies/deepDiff/makeDiff.js b/lib/strategies/deepDiff/makeDiff.js
index 443fc98eb8541ad98b5677ebaaea43db0363eeaf..3c7b926e7fd494e957dccc81e9e10c8f6a150bbc 100644
--- a/lib/strategies/deepDiff/makeDiff.js
+++ b/lib/strategies/deepDiff/makeDiff.js
@@ -3,12 +3,9 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = makeDiff;
-
+exports["default"] = makeDiff;
 var _diff = _interopRequireDefault(require("./diff"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
 /**
  * A higher order function that takes a `shouldContinue` function
  * and returns a custom deep diff function that uses the provided
@@ -23,6 +20,6 @@ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { de
  */
 function makeDiff(shouldContinue) {
   return function (oldObj, newObj) {
-    return (0, _diff.default)(oldObj, newObj, shouldContinue);
+    return (0, _diff["default"])(oldObj, newObj, shouldContinue);
   };
 }
\ No newline at end of file
diff --git a/lib/strategies/deepDiff/patch.js b/lib/strategies/deepDiff/patch.js
index 5d56d32e3d7e17ad91475e18ae235dcb3fc88a11..bf1e4cc7a6b059571802392e2d29fa9db6e2051b 100644
--- a/lib/strategies/deepDiff/patch.js
+++ b/lib/strategies/deepDiff/patch.js
@@ -3,16 +3,12 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = patchObject;
-
+exports["default"] = patchObject;
 var _constants = require("../constants");
-
 var _arrayDiff = require("./arrayDiff");
-
-function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }
-
+function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
+function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
 function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
 /**
  * Patches the given object according to the specified list of patches.
  * @param {Object} obj The object to patch
@@ -21,27 +17,30 @@ function _defineProperty(obj, key, value) { if (key in obj) { Object.definePrope
 function patchObject(obj, difference) {
   if (!difference.length) {
     return obj;
-  } // Start with a shallow copy of the object.
-
-
-  var newObject = _objectSpread({}, obj); // Iterate through the patches.
+  }
 
+  // Start with a shallow copy of the object.
+  var newObject = _objectSpread({}, obj);
 
+  // Iterate through the patches.
   difference.forEach(function (patch) {
     // If the value is an object whose keys are being updated,
     // then recursively patch the object.
     if (patch.change === _constants.DIFF_STATUS_KEYS_UPDATED) {
       newObject[patch.key] = patchObject(newObject[patch.key], patch.value);
-    } // If the key has been deleted, delete it.
+    }
+    // If the key has been deleted, delete it.
     else if (patch.change === _constants.DIFF_STATUS_REMOVED) {
-        Reflect.deleteProperty(newObject, patch.key);
-      } // If the key has been updated to a new value, update it.
-      else if (patch.change === _constants.DIFF_STATUS_UPDATED) {
-          newObject[patch.key] = patch.value;
-        } // If the value is an array, update it
-        else if (patch.change === _constants.DIFF_STATUS_ARRAY_UPDATED) {
-            newObject[patch.key] = (0, _arrayDiff.applyPatch)(newObject[patch.key], patch.value);
-          }
+      Reflect.deleteProperty(newObject, patch.key);
+    }
+    // If the key has been updated to a new value, update it.
+    else if (patch.change === _constants.DIFF_STATUS_UPDATED) {
+      newObject[patch.key] = patch.value;
+    }
+    // If the value is an array, update it
+    else if (patch.change === _constants.DIFF_STATUS_ARRAY_UPDATED) {
+      newObject[patch.key] = (0, _arrayDiff.applyPatch)(newObject[patch.key], patch.value);
+    }
   });
   return newObject;
 }
\ No newline at end of file
diff --git a/lib/strategies/shallowDiff/diff.js b/lib/strategies/shallowDiff/diff.js
index fea48aab80d683c73640f7c96436a43236d88910..fad71a078a6983519ef9b56bc2e19493942a7871 100644
--- a/lib/strategies/shallowDiff/diff.js
+++ b/lib/strategies/shallowDiff/diff.js
@@ -3,10 +3,8 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = shallowDiff;
-
+exports["default"] = shallowDiff;
 var _constants = require("../constants");
-
 /**
  * Returns a new Object containing only the fields in `new` that differ from `old`
  *
diff --git a/lib/strategies/shallowDiff/patch.js b/lib/strategies/shallowDiff/patch.js
index a47871fac213059792f1b99769e547170a37c2df..61cd04ddd46ff2dcaf470b3f7bf726d36c079a72 100644
--- a/lib/strategies/shallowDiff/patch.js
+++ b/lib/strategies/shallowDiff/patch.js
@@ -3,29 +3,25 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = _default;
-
+exports["default"] = _default;
 var _constants = require("../constants");
-
 function _default(obj, difference) {
   var newObj = Object.assign({}, obj);
   difference.forEach(function (_ref) {
     var change = _ref.change,
-        key = _ref.key,
-        value = _ref.value;
-
+      key = _ref.key,
+      value = _ref.value;
     switch (change) {
       case _constants.DIFF_STATUS_UPDATED:
         newObj[key] = value;
         break;
-
       case _constants.DIFF_STATUS_REMOVED:
         Reflect.deleteProperty(newObj, key);
         break;
-
-      default: // do nothing
-
+      default:
+      // do nothing
     }
   });
+
   return newObj;
 }
\ No newline at end of file
diff --git a/lib/util.js b/lib/util.js
index 2d6094a73396587dcbdf66316b7e921d725d39e3..78f33101acf58bafb60f0563440c21562b719d4a 100644
--- a/lib/util.js
+++ b/lib/util.js
@@ -4,7 +4,6 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.getBrowserAPI = getBrowserAPI;
-
 /**
  * Looks for a global browser api, first checking the chrome namespace and then
  * checking the browser namespace. If no appropriate namespace is present, this
@@ -12,7 +11,6 @@ exports.getBrowserAPI = getBrowserAPI;
  */
 function getBrowserAPI() {
   var api;
-
   try {
     // eslint-disable-next-line no-undef
     api = self.chrome || self.browser || browser;
@@ -20,10 +18,8 @@ function getBrowserAPI() {
     // eslint-disable-next-line no-undef
     api = browser;
   }
-
   if (!api) {
     throw new Error("Browser API is not present");
   }
-
   return api;
 }
\ No newline at end of file
diff --git a/lib/wrap-store/wrapStore.js b/lib/wrap-store/wrapStore.js
index 5dc1dea262761db483787a6306b31816b9d0aead..62664ec1ce61e0676081d7b9b7b28d494b5709a6 100644
--- a/lib/wrap-store/wrapStore.js
+++ b/lib/wrap-store/wrapStore.js
@@ -3,18 +3,15 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = void 0;
-
+exports["default"] = void 0;
 var _constants = require("../constants");
-
 var _serialization = require("../serialization");
-
 var _util = require("../util");
-
 var _diff = _interopRequireDefault(require("../strategies/shallowDiff/diff"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
+function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
+function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
+function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
+function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
 /**
  * Responder for promisified results
  * @param  {object} dispatchResult The result from `store.dispatch()`
@@ -27,7 +24,7 @@ var promiseResponder = function promiseResponder(dispatchResult, send) {
       error: null,
       value: res
     });
-  }).catch(function (err) {
+  })["catch"](function (err) {
     console.error('error dispatching result:', err);
     send({
       error: err.message,
@@ -35,91 +32,79 @@ var promiseResponder = function promiseResponder(dispatchResult, send) {
     });
   });
 };
-
 var defaultOpts = {
   portName: _constants.DEFAULT_PORT_NAME,
   dispatchResponder: promiseResponder,
   serializer: _serialization.noop,
   deserializer: _serialization.noop,
-  diffStrategy: _diff.default
+  diffStrategy: _diff["default"]
 };
+
 /**
  * Wraps a Redux store so that proxy stores can connect to it.
  * @param {Object} store A Redux store
  * @param {Object} options An object of form {portName, dispatchResponder, serializer, deserializer}, where `portName` is a required string and defines the name of the port for state transition changes, `dispatchResponder` is a function that takes the result of a store dispatch and optionally implements custom logic for responding to the original dispatch message,`serializer` is a function to serialize outgoing message payloads (default is passthrough), `deserializer` is a function to deserialize incoming message payloads (default is passthrough), and diffStrategy is one of the included diffing strategies (default is shallow diff) or a custom diffing function.
  */
-
 var _default = function _default(store) {
   var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOpts,
-      _ref$portName = _ref.portName,
-      portName = _ref$portName === void 0 ? defaultOpts.portName : _ref$portName,
-      _ref$dispatchResponde = _ref.dispatchResponder,
-      dispatchResponder = _ref$dispatchResponde === void 0 ? defaultOpts.dispatchResponder : _ref$dispatchResponde,
-      _ref$serializer = _ref.serializer,
-      serializer = _ref$serializer === void 0 ? defaultOpts.serializer : _ref$serializer,
-      _ref$deserializer = _ref.deserializer,
-      deserializer = _ref$deserializer === void 0 ? defaultOpts.deserializer : _ref$deserializer,
-      _ref$diffStrategy = _ref.diffStrategy,
-      diffStrategy = _ref$diffStrategy === void 0 ? defaultOpts.diffStrategy : _ref$diffStrategy;
-
+    _ref$portName = _ref.portName,
+    portName = _ref$portName === void 0 ? defaultOpts.portName : _ref$portName,
+    _ref$dispatchResponde = _ref.dispatchResponder,
+    dispatchResponder = _ref$dispatchResponde === void 0 ? defaultOpts.dispatchResponder : _ref$dispatchResponde,
+    _ref$serializer = _ref.serializer,
+    serializer = _ref$serializer === void 0 ? defaultOpts.serializer : _ref$serializer,
+    _ref$deserializer = _ref.deserializer,
+    deserializer = _ref$deserializer === void 0 ? defaultOpts.deserializer : _ref$deserializer,
+    _ref$diffStrategy = _ref.diffStrategy,
+    diffStrategy = _ref$diffStrategy === void 0 ? defaultOpts.diffStrategy : _ref$diffStrategy;
   if (!portName) {
     throw new Error('portName is required in options');
   }
-
   if (typeof serializer !== 'function') {
     throw new Error('serializer must be a function');
   }
-
   if (typeof deserializer !== 'function') {
     throw new Error('deserializer must be a function');
   }
-
   if (typeof diffStrategy !== 'function') {
     throw new Error('diffStrategy must be one of the included diffing strategies or a custom diff function');
   }
-
   var browserAPI = (0, _util.getBrowserAPI)();
+
   /**
    * Respond to dispatches from UI components
    */
-
   var dispatchResponse = function dispatchResponse(request, sender, sendResponse) {
     if (request.type === _constants.DISPATCH_TYPE && request.portName === portName) {
       var action = Object.assign({}, request.payload, {
         _sender: sender
       });
       var dispatchResult = null;
-
       try {
         dispatchResult = store.dispatch(action);
       } catch (e) {
         dispatchResult = Promise.reject(e.message);
         console.error(e);
       }
-
       dispatchResponder(dispatchResult, sendResponse);
       return true;
     }
   };
+
   /**
   * Setup for state updates
   */
-
-
   var connectState = function connectState(port) {
     if (port.name !== portName) {
       return;
     }
-
     var serializedMessagePoster = (0, _serialization.withSerializer)(serializer)(function () {
       return port.postMessage.apply(port, arguments);
     });
     var prevState = store.getState();
-
     var patchState = function patchState() {
       var state = store.getState();
       var diff = diffStrategy(prevState, state);
-
       if (diff.length) {
         prevState = state;
         serializedMessagePoster({
@@ -127,101 +112,87 @@ var _default = function _default(store) {
           payload: diff
         });
       }
-    }; // Send patched state down connected port on every redux store state change
+    };
 
+    // Send patched state down connected port on every redux store state change
+    var unsubscribe = store.subscribe(patchState);
 
-    var unsubscribe = store.subscribe(patchState); // when the port disconnects, unsubscribe the sendState listener
-
-    port.onDisconnect.addListener(unsubscribe); // Send store's initial state through port
+    // when the port disconnects, unsubscribe the sendState listener
+    port.onDisconnect.addListener(unsubscribe);
 
+    // Send store's initial state through port
     serializedMessagePoster({
       type: _constants.STATE_TYPE,
       payload: prevState
     });
   };
-
   var withPayloadDeserializer = (0, _serialization.withDeserializer)(deserializer);
-
   var shouldDeserialize = function shouldDeserialize(request) {
     return request.type === _constants.DISPATCH_TYPE && request.portName === portName;
   };
+
   /**
    * Setup action handler
    */
-
-
   withPayloadDeserializer(function () {
     var _browserAPI$runtime$o;
-
     return (_browserAPI$runtime$o = browserAPI.runtime.onMessage).addListener.apply(_browserAPI$runtime$o, arguments);
   })(dispatchResponse, shouldDeserialize);
+
   /**
    * Setup external action handler
    */
-
   if (browserAPI.runtime.onMessageExternal) {
     withPayloadDeserializer(function () {
       var _browserAPI$runtime$o2;
-
       return (_browserAPI$runtime$o2 = browserAPI.runtime.onMessageExternal).addListener.apply(_browserAPI$runtime$o2, arguments);
     })(dispatchResponse, shouldDeserialize);
   } else {
     console.warn('runtime.onMessageExternal is not supported');
   }
+
   /**
    * Setup extended connection
    */
-
-
   browserAPI.runtime.onConnect.addListener(connectState);
+
   /**
    * Setup extended external connection
    */
-
   if (browserAPI.runtime.onConnectExternal) {
     browserAPI.runtime.onConnectExternal.addListener(connectState);
   } else {
     console.warn('runtime.onConnectExternal is not supported');
   }
+
   /**
    * Safety message to tabs for content scripts
    */
-
-
   browserAPI.tabs.query({}, function (tabs) {
-    var _iteratorNormalCompletion = true;
-    var _didIteratorError = false;
-    var _iteratorError = undefined;
-
+    var _iterator = _createForOfIteratorHelper(tabs),
+      _step;
     try {
-      for (var _iterator = tabs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
+      for (_iterator.s(); !(_step = _iterator.n()).done;) {
         var tab = _step.value;
         browserAPI.tabs.sendMessage(tab.id, {
           action: 'storeReady',
           portName: portName
         }, function () {
-          if (chrome.runtime.lastError) {// do nothing - errors can be present
+          if (chrome.runtime.lastError) {
+            // do nothing - errors can be present
             // if no content script exists on reciever
           }
         });
       }
     } catch (err) {
-      _didIteratorError = true;
-      _iteratorError = err;
+      _iterator.e(err);
     } finally {
-      try {
-        if (!_iteratorNormalCompletion && _iterator.return != null) {
-          _iterator.return();
-        }
-      } finally {
-        if (_didIteratorError) {
-          throw _iteratorError;
-        }
-      }
+      _iterator.f();
     }
-  }); // For non-tab based
+  });
+
+  // For non-tab based
   // TODO: Find use case for this. Ommiting until then.
   // browserAPI.runtime.sendMessage(null, {action: 'storeReady'});
 };
-
-exports.default = _default;
\ No newline at end of file
+exports["default"] = _default;
\ No newline at end of file
